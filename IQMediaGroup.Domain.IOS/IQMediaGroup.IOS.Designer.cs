//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace IQMediaGroup.Domain.IOS
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class IQMediaGroupIOSEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new IQMediaGroupIOSEntities object using the connection string found in the 'IQMediaGroupIOSEntities' section of the application configuration file.
        /// </summary>
        public IQMediaGroupIOSEntities() : base("name=IQMediaGroupIOSEntities", "IQMediaGroupIOSEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new IQMediaGroupIOSEntities object.
        /// </summary>
        public IQMediaGroupIOSEntities(string connectionString) : base(connectionString, "IQMediaGroupIOSEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new IQMediaGroupIOSEntities object.
        /// </summary>
        public IQMediaGroupIOSEntities(EntityConnection connection) : base(connection, "IQMediaGroupIOSEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IQIOSService_Export> IQIOSService_Export
        {
            get
            {
                if ((_IQIOSService_Export == null))
                {
                    _IQIOSService_Export = base.CreateObjectSet<IQIOSService_Export>("IQIOSService_Export");
                }
                return _IQIOSService_Export;
            }
        }
        private ObjectSet<IQIOSService_Export> _IQIOSService_Export;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RawMediaPlayLogs> RawMediaPlayLogs
        {
            get
            {
                if ((_RawMediaPlayLogs == null))
                {
                    _RawMediaPlayLogs = base.CreateObjectSet<RawMediaPlayLogs>("RawMediaPlayLogs");
                }
                return _RawMediaPlayLogs;
            }
        }
        private ObjectSet<RawMediaPlayLogs> _RawMediaPlayLogs;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IQIOSService_Export EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIQIOSService_Export(IQIOSService_Export iQIOSService_Export)
        {
            base.AddObject("IQIOSService_Export", iQIOSService_Export);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RawMediaPlayLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRawMediaPlayLogs(RawMediaPlayLogs rawMediaPlayLogs)
        {
            base.AddObject("RawMediaPlayLogs", rawMediaPlayLogs);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="clipGUID">No Metadata Documentation available.</param>
        public ObjectResult<IOSFileDetail> GetClipIOSLocation(Nullable<global::System.Guid> clipGUID)
        {
            ObjectParameter clipGUIDParameter;
            if (clipGUID.HasValue)
            {
                clipGUIDParameter = new ObjectParameter("clipGUID", clipGUID);
            }
            else
            {
                clipGUIDParameter = new ObjectParameter("clipGUID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<IOSFileDetail>("GetClipIOSLocation", clipGUIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iQAgentIframeID">No Metadata Documentation available.</param>
        public ObjectResult<IOSFileDetail> GetRecordFileLocationByGuid(Nullable<global::System.Guid> iQAgentIframeID)
        {
            ObjectParameter iQAgentIframeIDParameter;
            if (iQAgentIframeID.HasValue)
            {
                iQAgentIframeIDParameter = new ObjectParameter("IQAgentIframeID", iQAgentIframeID);
            }
            else
            {
                iQAgentIframeIDParameter = new ObjectParameter("IQAgentIframeID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<IOSFileDetail>("GetRecordFileLocationByGuid", iQAgentIframeIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="uDID">No Metadata Documentation available.</param>
        /// <param name="application">No Metadata Documentation available.</param>
        /// <param name="clientGuid">No Metadata Documentation available.</param>
        /// <param name="appVersion">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        /// <param name="appPath">No Metadata Documentation available.</param>
        public ObjectResult<IOSApplicationFTPDetails> CheckIsCustomerRegistered(global::System.String uDID, global::System.String application, ObjectParameter clientGuid, global::System.String appVersion, ObjectParameter status, ObjectParameter appPath)
        {
            ObjectParameter uDIDParameter;
            if (uDID != null)
            {
                uDIDParameter = new ObjectParameter("UDID", uDID);
            }
            else
            {
                uDIDParameter = new ObjectParameter("UDID", typeof(global::System.String));
            }
    
            ObjectParameter applicationParameter;
            if (application != null)
            {
                applicationParameter = new ObjectParameter("Application", application);
            }
            else
            {
                applicationParameter = new ObjectParameter("Application", typeof(global::System.String));
            }
    
            ObjectParameter appVersionParameter;
            if (appVersion != null)
            {
                appVersionParameter = new ObjectParameter("AppVersion", appVersion);
            }
            else
            {
                appVersionParameter = new ObjectParameter("AppVersion", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<IOSApplicationFTPDetails>("CheckIsCustomerRegistered", uDIDParameter, applicationParameter, clientGuid, appVersionParameter, status, appPath);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="loginID">No Metadata Documentation available.</param>
        /// <param name="uDID">No Metadata Documentation available.</param>
        /// <param name="application">No Metadata Documentation available.</param>
        /// <param name="appVersion">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        /// <param name="appPath">No Metadata Documentation available.</param>
        /// <param name="clientGuid">No Metadata Documentation available.</param>
        /// <param name="customerPassword">No Metadata Documentation available.</param>
        public ObjectResult<IOSApplicationFTPDetails> CheckCustomerMobileLogin(global::System.String loginID, global::System.String uDID, global::System.String application, global::System.String appVersion, ObjectParameter status, ObjectParameter appPath, ObjectParameter clientGuid, ObjectParameter customerPassword)
        {
            ObjectParameter loginIDParameter;
            if (loginID != null)
            {
                loginIDParameter = new ObjectParameter("LoginID", loginID);
            }
            else
            {
                loginIDParameter = new ObjectParameter("LoginID", typeof(global::System.String));
            }
    
            ObjectParameter uDIDParameter;
            if (uDID != null)
            {
                uDIDParameter = new ObjectParameter("UDID", uDID);
            }
            else
            {
                uDIDParameter = new ObjectParameter("UDID", typeof(global::System.String));
            }
    
            ObjectParameter applicationParameter;
            if (application != null)
            {
                applicationParameter = new ObjectParameter("Application", application);
            }
            else
            {
                applicationParameter = new ObjectParameter("Application", typeof(global::System.String));
            }
    
            ObjectParameter appVersionParameter;
            if (appVersion != null)
            {
                appVersionParameter = new ObjectParameter("AppVersion", appVersion);
            }
            else
            {
                appVersionParameter = new ObjectParameter("AppVersion", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<IOSApplicationFTPDetails>("CheckCustomerMobileLogin", loginIDParameter, uDIDParameter, applicationParameter, appVersionParameter, status, appPath, clientGuid, customerPassword);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fileName">No Metadata Documentation available.</param>
        /// <param name="title">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        /// <param name="keywords">No Metadata Documentation available.</param>
        /// <param name="startTime">No Metadata Documentation available.</param>
        /// <param name="endTime">No Metadata Documentation available.</param>
        /// <param name="uDID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Decimal>> InsertIOSUGCUpload(global::System.String fileName, global::System.String title, global::System.String description, global::System.String keywords, global::System.String startTime, global::System.String endTime, global::System.String uDID)
        {
            ObjectParameter fileNameParameter;
            if (fileName != null)
            {
                fileNameParameter = new ObjectParameter("FileName", fileName);
            }
            else
            {
                fileNameParameter = new ObjectParameter("FileName", typeof(global::System.String));
            }
    
            ObjectParameter titleParameter;
            if (title != null)
            {
                titleParameter = new ObjectParameter("Title", title);
            }
            else
            {
                titleParameter = new ObjectParameter("Title", typeof(global::System.String));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("Description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("Description", typeof(global::System.String));
            }
    
            ObjectParameter keywordsParameter;
            if (keywords != null)
            {
                keywordsParameter = new ObjectParameter("Keywords", keywords);
            }
            else
            {
                keywordsParameter = new ObjectParameter("Keywords", typeof(global::System.String));
            }
    
            ObjectParameter startTimeParameter;
            if (startTime != null)
            {
                startTimeParameter = new ObjectParameter("StartTime", startTime);
            }
            else
            {
                startTimeParameter = new ObjectParameter("StartTime", typeof(global::System.String));
            }
    
            ObjectParameter endTimeParameter;
            if (endTime != null)
            {
                endTimeParameter = new ObjectParameter("EndTime", endTime);
            }
            else
            {
                endTimeParameter = new ObjectParameter("EndTime", typeof(global::System.String));
            }
    
            ObjectParameter uDIDParameter;
            if (uDID != null)
            {
                uDIDParameter = new ObjectParameter("UDID", uDID);
            }
            else
            {
                uDIDParameter = new ObjectParameter("UDID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Decimal>>("InsertIOSUGCUpload", fileNameParameter, titleParameter, descriptionParameter, keywordsParameter, startTimeParameter, endTimeParameter, uDIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="uDID">No Metadata Documentation available.</param>
        /// <param name="application">No Metadata Documentation available.</param>
        public ObjectResult<IOSApplicationFTPDetails> usp_IOSService_Customer_CheckIsRegistered(global::System.String uDID, global::System.String application)
        {
            ObjectParameter uDIDParameter;
            if (uDID != null)
            {
                uDIDParameter = new ObjectParameter("UDID", uDID);
            }
            else
            {
                uDIDParameter = new ObjectParameter("UDID", typeof(global::System.String));
            }
    
            ObjectParameter applicationParameter;
            if (application != null)
            {
                applicationParameter = new ObjectParameter("Application", application);
            }
            else
            {
                applicationParameter = new ObjectParameter("Application", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<IOSApplicationFTPDetails>("usp_IOSService_Customer_CheckIsRegistered", uDIDParameter, applicationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="clientGuid">No Metadata Documentation available.</param>
        public ObjectResult<CustomCategory> GetCustomCategoryByClient(Nullable<global::System.Guid> clientGuid)
        {
            ObjectParameter clientGuidParameter;
            if (clientGuid.HasValue)
            {
                clientGuidParameter = new ObjectParameter("ClientGuid", clientGuid);
            }
            else
            {
                clientGuidParameter = new ObjectParameter("ClientGuid", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<CustomCategory>("GetCustomCategoryByClient", clientGuidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="uniqueID">No Metadata Documentation available.</param>
        /// <param name="fileName">No Metadata Documentation available.</param>
        /// <param name="categoryGuid">No Metadata Documentation available.</param>
        /// <param name="tags">No Metadata Documentation available.</param>
        /// <param name="deviceDateTime">No Metadata Documentation available.</param>
        /// <param name="deviceTimeZone">No Metadata Documentation available.</param>
        /// <param name="videoTimeZone">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int64>> InsertUploadTracking(Nullable<global::System.Guid> uniqueID, global::System.String fileName, Nullable<global::System.Guid> categoryGuid, global::System.String tags, Nullable<global::System.DateTime> deviceDateTime, global::System.String deviceTimeZone, Nullable<global::System.DateTime> videoTimeZone)
        {
            ObjectParameter uniqueIDParameter;
            if (uniqueID.HasValue)
            {
                uniqueIDParameter = new ObjectParameter("UniqueID", uniqueID);
            }
            else
            {
                uniqueIDParameter = new ObjectParameter("UniqueID", typeof(global::System.Guid));
            }
    
            ObjectParameter fileNameParameter;
            if (fileName != null)
            {
                fileNameParameter = new ObjectParameter("FileName", fileName);
            }
            else
            {
                fileNameParameter = new ObjectParameter("FileName", typeof(global::System.String));
            }
    
            ObjectParameter categoryGuidParameter;
            if (categoryGuid.HasValue)
            {
                categoryGuidParameter = new ObjectParameter("CategoryGuid", categoryGuid);
            }
            else
            {
                categoryGuidParameter = new ObjectParameter("CategoryGuid", typeof(global::System.Guid));
            }
    
            ObjectParameter tagsParameter;
            if (tags != null)
            {
                tagsParameter = new ObjectParameter("Tags", tags);
            }
            else
            {
                tagsParameter = new ObjectParameter("Tags", typeof(global::System.String));
            }
    
            ObjectParameter deviceDateTimeParameter;
            if (deviceDateTime.HasValue)
            {
                deviceDateTimeParameter = new ObjectParameter("DeviceDateTime", deviceDateTime);
            }
            else
            {
                deviceDateTimeParameter = new ObjectParameter("DeviceDateTime", typeof(global::System.DateTime));
            }
    
            ObjectParameter deviceTimeZoneParameter;
            if (deviceTimeZone != null)
            {
                deviceTimeZoneParameter = new ObjectParameter("DeviceTimeZone", deviceTimeZone);
            }
            else
            {
                deviceTimeZoneParameter = new ObjectParameter("DeviceTimeZone", typeof(global::System.String));
            }
    
            ObjectParameter videoTimeZoneParameter;
            if (videoTimeZone.HasValue)
            {
                videoTimeZoneParameter = new ObjectParameter("VideoTimeZone", videoTimeZone);
            }
            else
            {
                videoTimeZoneParameter = new ObjectParameter("VideoTimeZone", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int64>>("InsertUploadTracking", uniqueIDParameter, fileNameParameter, categoryGuidParameter, tagsParameter, deviceDateTimeParameter, deviceTimeZoneParameter, videoTimeZoneParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> UpdateUploadTrackingStatus(Nullable<global::System.Int64> iD, global::System.String status, global::System.String comments)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int64));
            }
    
            ObjectParameter statusParameter;
            if (status != null)
            {
                statusParameter = new ObjectParameter("Status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("Status", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("UpdateUploadTrackingStatus", iDParameter, statusParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="uDID">No Metadata Documentation available.</param>
        /// <param name="application">No Metadata Documentation available.</param>
        /// <param name="exceptionMessage">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> InsertIOSException(global::System.String uDID, global::System.String application, global::System.String exceptionMessage)
        {
            ObjectParameter uDIDParameter;
            if (uDID != null)
            {
                uDIDParameter = new ObjectParameter("UDID", uDID);
            }
            else
            {
                uDIDParameter = new ObjectParameter("UDID", typeof(global::System.String));
            }
    
            ObjectParameter applicationParameter;
            if (application != null)
            {
                applicationParameter = new ObjectParameter("Application", application);
            }
            else
            {
                applicationParameter = new ObjectParameter("Application", typeof(global::System.String));
            }
    
            ObjectParameter exceptionMessageParameter;
            if (exceptionMessage != null)
            {
                exceptionMessageParameter = new ObjectParameter("ExceptionMessage", exceptionMessage);
            }
            else
            {
                exceptionMessageParameter = new ObjectParameter("ExceptionMessage", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("InsertIOSException", uDIDParameter, applicationParameter, exceptionMessageParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IQMediaGroupModel", Name="IQIOSService_Export")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IQIOSService_Export : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IQIOSService_Export object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="clipGuid">Initial value of the ClipGuid property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="dateQueued">Initial value of the DateQueued property.</param>
        /// <param name="lastModified">Initial value of the LastModified property.</param>
        public static IQIOSService_Export CreateIQIOSService_Export(global::System.Guid id, global::System.Guid clipGuid, global::System.String status, global::System.DateTime dateQueued, global::System.DateTime lastModified)
        {
            IQIOSService_Export iQIOSService_Export = new IQIOSService_Export();
            iQIOSService_Export.ID = id;
            iQIOSService_Export.ClipGuid = clipGuid;
            iQIOSService_Export.Status = status;
            iQIOSService_Export.DateQueued = dateQueued;
            iQIOSService_Export.LastModified = lastModified;
            return iQIOSService_Export;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ClipGuid
        {
            get
            {
                return _ClipGuid;
            }
            set
            {
                OnClipGuidChanging(value);
                ReportPropertyChanging("ClipGuid");
                _ClipGuid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClipGuid");
                OnClipGuidChanged();
            }
        }
        private global::System.Guid _ClipGuid;
        partial void OnClipGuidChanging(global::System.Guid value);
        partial void OnClipGuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateQueued
        {
            get
            {
                return _DateQueued;
            }
            set
            {
                OnDateQueuedChanging(value);
                ReportPropertyChanging("DateQueued");
                _DateQueued = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateQueued");
                OnDateQueuedChanged();
            }
        }
        private global::System.DateTime _DateQueued;
        partial void OnDateQueuedChanging(global::System.DateTime value);
        partial void OnDateQueuedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastModified
        {
            get
            {
                return _LastModified;
            }
            set
            {
                OnLastModifiedChanging(value);
                ReportPropertyChanging("LastModified");
                _LastModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModified");
                OnLastModifiedChanged();
            }
        }
        private global::System.DateTime _LastModified;
        partial void OnLastModifiedChanging(global::System.DateTime value);
        partial void OnLastModifiedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IQMediaGroupModel", Name="RawMediaPlayLogs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RawMediaPlayLogs : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RawMediaPlayLogs object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="c_AssetGuid">Initial value of the C_AssetGuid property.</param>
        /// <param name="playDate">Initial value of the PlayDate property.</param>
        public static RawMediaPlayLogs CreateRawMediaPlayLogs(global::System.Int64 id, global::System.Guid c_AssetGuid, global::System.DateTime playDate)
        {
            RawMediaPlayLogs rawMediaPlayLogs = new RawMediaPlayLogs();
            rawMediaPlayLogs.ID = id;
            rawMediaPlayLogs.C_AssetGuid = c_AssetGuid;
            rawMediaPlayLogs.PlayDate = playDate;
            return rawMediaPlayLogs;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid C_AssetGuid
        {
            get
            {
                return _C_AssetGuid;
            }
            set
            {
                OnC_AssetGuidChanging(value);
                ReportPropertyChanging("C_AssetGuid");
                _C_AssetGuid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("C_AssetGuid");
                OnC_AssetGuidChanged();
            }
        }
        private global::System.Guid _C_AssetGuid;
        partial void OnC_AssetGuidChanging(global::System.Guid value);
        partial void OnC_AssetGuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PlayDate
        {
            get
            {
                return _PlayDate;
            }
            set
            {
                OnPlayDateChanging(value);
                ReportPropertyChanging("PlayDate");
                _PlayDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlayDate");
                OnPlayDateChanged();
            }
        }
        private global::System.DateTime _PlayDate;
        partial void OnPlayDateChanging(global::System.DateTime value);
        partial void OnPlayDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IPAddress
        {
            get
            {
                return _IPAddress;
            }
            set
            {
                OnIPAddressChanging(value);
                ReportPropertyChanging("IPAddress");
                _IPAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IPAddress");
                OnIPAddressChanged();
            }
        }
        private global::System.String _IPAddress;
        partial void OnIPAddressChanging(global::System.String value);
        partial void OnIPAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> IPAddDecimal
        {
            get
            {
                return _IPAddDecimal;
            }
            set
            {
                OnIPAddDecimalChanging(value);
                ReportPropertyChanging("IPAddDecimal");
                _IPAddDecimal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IPAddDecimal");
                OnIPAddDecimalChanged();
            }
        }
        private Nullable<global::System.Int64> _IPAddDecimal;
        partial void OnIPAddDecimalChanging(Nullable<global::System.Int64> value);
        partial void OnIPAddDecimalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Referrer
        {
            get
            {
                return _Referrer;
            }
            set
            {
                OnReferrerChanging(value);
                ReportPropertyChanging("Referrer");
                _Referrer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Referrer");
                OnReferrerChanged();
            }
        }
        private global::System.String _Referrer;
        partial void OnReferrerChanging(global::System.String value);
        partial void OnReferrerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> C_UserGuid
        {
            get
            {
                return _C_UserGuid;
            }
            set
            {
                OnC_UserGuidChanging(value);
                ReportPropertyChanging("C_UserGuid");
                _C_UserGuid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("C_UserGuid");
                OnC_UserGuidChanged();
            }
        }
        private Nullable<global::System.Guid> _C_UserGuid;
        partial void OnC_UserGuidChanging(Nullable<global::System.Guid> value);
        partial void OnC_UserGuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Device
        {
            get
            {
                return _Device;
            }
            set
            {
                OnDeviceChanging(value);
                ReportPropertyChanging("Device");
                _Device = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Device");
                OnDeviceChanged();
            }
        }
        private global::System.String _Device;
        partial void OnDeviceChanging(global::System.String value);
        partial void OnDeviceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeviceOS
        {
            get
            {
                return _DeviceOS;
            }
            set
            {
                OnDeviceOSChanging(value);
                ReportPropertyChanging("DeviceOS");
                _DeviceOS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DeviceOS");
                OnDeviceOSChanged();
            }
        }
        private global::System.String _DeviceOS;
        partial void OnDeviceOSChanging(global::System.String value);
        partial void OnDeviceOSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> PercentPlayed
        {
            get
            {
                return _PercentPlayed;
            }
            set
            {
                OnPercentPlayedChanging(value);
                ReportPropertyChanging("PercentPlayed");
                _PercentPlayed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PercentPlayed");
                OnPercentPlayedChanged();
            }
        }
        private Nullable<global::System.Int16> _PercentPlayed;
        partial void OnPercentPlayedChanging(Nullable<global::System.Int16> value);
        partial void OnPercentPlayedChanged();

        #endregion

    
    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="IQMediaGroupModel", Name="CustomCategory")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class CustomCategory : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CategoryGUID
        {
            get
            {
                return _CategoryGUID;
            }
            set
            {
                OnCategoryGUIDChanging(value);
                ReportPropertyChanging("CategoryGUID");
                _CategoryGUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryGUID");
                OnCategoryGUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _CategoryGUID;
        partial void OnCategoryGUIDChanging(Nullable<global::System.Guid> value);
        partial void OnCategoryGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="IQMediaGroupModel", Name="IOSApplicationFTPDetails")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class IOSApplicationFTPDetails : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FTPHost
        {
            get
            {
                return _FTPHost;
            }
            set
            {
                OnFTPHostChanging(value);
                ReportPropertyChanging("FTPHost");
                _FTPHost = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FTPHost");
                OnFTPHostChanged();
            }
        }
        private global::System.String _FTPHost;
        partial void OnFTPHostChanging(global::System.String value);
        partial void OnFTPHostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FTPPath
        {
            get
            {
                return _FTPPath;
            }
            set
            {
                OnFTPPathChanging(value);
                ReportPropertyChanging("FTPPath");
                _FTPPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FTPPath");
                OnFTPPathChanged();
            }
        }
        private global::System.String _FTPPath;
        partial void OnFTPPathChanging(global::System.String value);
        partial void OnFTPPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FTPLoginID
        {
            get
            {
                return _FTPLoginID;
            }
            set
            {
                OnFTPLoginIDChanging(value);
                ReportPropertyChanging("FTPLoginID");
                _FTPLoginID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FTPLoginID");
                OnFTPLoginIDChanged();
            }
        }
        private global::System.String _FTPLoginID;
        partial void OnFTPLoginIDChanging(global::System.String value);
        partial void OnFTPLoginIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FTPPwd
        {
            get
            {
                return _FTPPwd;
            }
            set
            {
                OnFTPPwdChanging(value);
                ReportPropertyChanging("FTPPwd");
                _FTPPwd = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FTPPwd");
                OnFTPPwdChanged();
            }
        }
        private global::System.String _FTPPwd;
        partial void OnFTPPwdChanging(global::System.String value);
        partial void OnFTPPwdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DefaultCategory
        {
            get
            {
                return _DefaultCategory;
            }
            set
            {
                OnDefaultCategoryChanging(value);
                ReportPropertyChanging("DefaultCategory");
                _DefaultCategory = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DefaultCategory");
                OnDefaultCategoryChanged();
            }
        }
        private Nullable<global::System.Guid> _DefaultCategory;
        partial void OnDefaultCategoryChanging(Nullable<global::System.Guid> value);
        partial void OnDefaultCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsCategoryEnabled
        {
            get
            {
                return _IsCategoryEnabled;
            }
            set
            {
                OnIsCategoryEnabledChanging(value);
                ReportPropertyChanging("IsCategoryEnabled");
                _IsCategoryEnabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCategoryEnabled");
                OnIsCategoryEnabledChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsCategoryEnabled;
        partial void OnIsCategoryEnabledChanging(Nullable<global::System.Boolean> value);
        partial void OnIsCategoryEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaxVideoDuration
        {
            get
            {
                return _MaxVideoDuration;
            }
            set
            {
                OnMaxVideoDurationChanging(value);
                ReportPropertyChanging("MaxVideoDuration");
                _MaxVideoDuration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxVideoDuration");
                OnMaxVideoDurationChanged();
            }
        }
        private Nullable<global::System.Int32> _MaxVideoDuration;
        partial void OnMaxVideoDurationChanging(Nullable<global::System.Int32> value);
        partial void OnMaxVideoDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ForceLandscape
        {
            get
            {
                return _ForceLandscape;
            }
            set
            {
                OnForceLandscapeChanging(value);
                ReportPropertyChanging("ForceLandscape");
                _ForceLandscape = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ForceLandscape");
                OnForceLandscapeChanged();
            }
        }
        private Nullable<global::System.Boolean> _ForceLandscape;
        partial void OnForceLandscapeChanging(Nullable<global::System.Boolean> value);
        partial void OnForceLandscapeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="IQMediaGroupModel", Name="IOSFileDetail")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class IOSFileDetail : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IOSFileDetail object.
        /// </summary>
        /// <param name="streamSuffixPath">Initial value of the StreamSuffixPath property.</param>
        /// <param name="appName">Initial value of the AppName property.</param>
        /// <param name="iOSFileLocation">Initial value of the IOSFileLocation property.</param>
        public static IOSFileDetail CreateIOSFileDetail(global::System.String streamSuffixPath, global::System.String appName, global::System.String iOSFileLocation)
        {
            IOSFileDetail iOSFileDetail = new IOSFileDetail();
            iOSFileDetail.StreamSuffixPath = streamSuffixPath;
            iOSFileDetail.AppName = appName;
            iOSFileDetail.IOSFileLocation = iOSFileLocation;
            return iOSFileDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StreamSuffixPath
        {
            get
            {
                return _StreamSuffixPath;
            }
            set
            {
                OnStreamSuffixPathChanging(value);
                ReportPropertyChanging("StreamSuffixPath");
                _StreamSuffixPath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StreamSuffixPath");
                OnStreamSuffixPathChanged();
            }
        }
        private global::System.String _StreamSuffixPath;
        partial void OnStreamSuffixPathChanging(global::System.String value);
        partial void OnStreamSuffixPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AppName
        {
            get
            {
                return _AppName;
            }
            set
            {
                OnAppNameChanging(value);
                ReportPropertyChanging("AppName");
                _AppName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AppName");
                OnAppNameChanged();
            }
        }
        private global::System.String _AppName;
        partial void OnAppNameChanging(global::System.String value);
        partial void OnAppNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IOSFileLocation
        {
            get
            {
                return _IOSFileLocation;
            }
            set
            {
                OnIOSFileLocationChanging(value);
                ReportPropertyChanging("IOSFileLocation");
                _IOSFileLocation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IOSFileLocation");
                OnIOSFileLocationChanged();
            }
        }
        private global::System.String _IOSFileLocation;
        partial void OnIOSFileLocationChanging(global::System.String value);
        partial void OnIOSFileLocationChanged();

        #endregion

    }

    #endregion

    
}
