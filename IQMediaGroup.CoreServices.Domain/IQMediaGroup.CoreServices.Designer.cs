//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace IQMediaGroup.CoreServices.Domain
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class IQMediaGroupEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new IQMediaGroupEntities object using the connection string found in the 'IQMediaGroupEntities' section of the application configuration file.
        /// </summary>
        public IQMediaGroupEntities() : base("name=IQMediaGroupEntities", "IQMediaGroupEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new IQMediaGroupEntities object.
        /// </summary>
        public IQMediaGroupEntities(string connectionString) : base(connectionString, "IQMediaGroupEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new IQMediaGroupEntities object.
        /// </summary>
        public IQMediaGroupEntities(EntityConnection connection) : base(connection, "IQMediaGroupEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IQ_Five_Min_Staging> IQ_Five_Min_Staging
        {
            get
            {
                if ((_IQ_Five_Min_Staging == null))
                {
                    _IQ_Five_Min_Staging = base.CreateObjectSet<IQ_Five_Min_Staging>("IQ_Five_Min_Staging");
                }
                return _IQ_Five_Min_Staging;
            }
        }
        private ObjectSet<IQ_Five_Min_Staging> _IQ_Five_Min_Staging;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IQ_Five_Min_Staging EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIQ_Five_Min_Staging(IQ_Five_Min_Staging iQ_Five_Min_Staging)
        {
            base.AddObject("IQ_Five_Min_Staging", iQ_Five_Min_Staging);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="recordFileGuid">No Metadata Documentation available.</param>
        /// <param name="destinationFile">No Metadata Documentation available.</param>
        /// <param name="fileExtension">No Metadata Documentation available.</param>
        /// <param name="startDate">No Metadata Documentation available.</param>
        /// <param name="endDate">No Metadata Documentation available.</param>
        /// <param name="endOffset">No Metadata Documentation available.</param>
        /// <param name="sourceGuid">No Metadata Documentation available.</param>
        /// <param name="recordFileTypeID">No Metadata Documentation available.</param>
        /// <param name="rootPathID">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        /// <param name="isUGC">No Metadata Documentation available.</param>
        /// <param name="uGCMetaData">No Metadata Documentation available.</param>
        /// <param name="message">No Metadata Documentation available.</param>
        public int Insert_IQCore_RecordFile(ObjectParameter recordFileGuid, ObjectParameter destinationFile, global::System.String fileExtension, Nullable<global::System.DateTime> startDate, Nullable<global::System.DateTime> endDate, Nullable<global::System.Int32> endOffset, Nullable<global::System.Guid> sourceGuid, Nullable<global::System.Int32> recordFileTypeID, Nullable<global::System.Int32> rootPathID, global::System.String status, Nullable<global::System.Boolean> isUGC, global::System.String uGCMetaData, ObjectParameter message)
        {
            ObjectParameter fileExtensionParameter;
            if (fileExtension != null)
            {
                fileExtensionParameter = new ObjectParameter("FileExtension", fileExtension);
            }
            else
            {
                fileExtensionParameter = new ObjectParameter("FileExtension", typeof(global::System.String));
            }
    
            ObjectParameter startDateParameter;
            if (startDate.HasValue)
            {
                startDateParameter = new ObjectParameter("StartDate", startDate);
            }
            else
            {
                startDateParameter = new ObjectParameter("StartDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter endDateParameter;
            if (endDate.HasValue)
            {
                endDateParameter = new ObjectParameter("EndDate", endDate);
            }
            else
            {
                endDateParameter = new ObjectParameter("EndDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter endOffsetParameter;
            if (endOffset.HasValue)
            {
                endOffsetParameter = new ObjectParameter("EndOffset", endOffset);
            }
            else
            {
                endOffsetParameter = new ObjectParameter("EndOffset", typeof(global::System.Int32));
            }
    
            ObjectParameter sourceGuidParameter;
            if (sourceGuid.HasValue)
            {
                sourceGuidParameter = new ObjectParameter("SourceGuid", sourceGuid);
            }
            else
            {
                sourceGuidParameter = new ObjectParameter("SourceGuid", typeof(global::System.Guid));
            }
    
            ObjectParameter recordFileTypeIDParameter;
            if (recordFileTypeID.HasValue)
            {
                recordFileTypeIDParameter = new ObjectParameter("RecordFileTypeID", recordFileTypeID);
            }
            else
            {
                recordFileTypeIDParameter = new ObjectParameter("RecordFileTypeID", typeof(global::System.Int32));
            }
    
            ObjectParameter rootPathIDParameter;
            if (rootPathID.HasValue)
            {
                rootPathIDParameter = new ObjectParameter("RootPathID", rootPathID);
            }
            else
            {
                rootPathIDParameter = new ObjectParameter("RootPathID", typeof(global::System.Int32));
            }
    
            ObjectParameter statusParameter;
            if (status != null)
            {
                statusParameter = new ObjectParameter("Status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("Status", typeof(global::System.String));
            }
    
            ObjectParameter isUGCParameter;
            if (isUGC.HasValue)
            {
                isUGCParameter = new ObjectParameter("IsUGC", isUGC);
            }
            else
            {
                isUGCParameter = new ObjectParameter("IsUGC", typeof(global::System.Boolean));
            }
    
            ObjectParameter uGCMetaDataParameter;
            if (uGCMetaData != null)
            {
                uGCMetaDataParameter = new ObjectParameter("UGCMetaData", uGCMetaData);
            }
            else
            {
                uGCMetaDataParameter = new ObjectParameter("UGCMetaData", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("Insert_IQCore_RecordFile", recordFileGuid, destinationFile, fileExtensionParameter, startDateParameter, endDateParameter, endOffsetParameter, sourceGuidParameter, recordFileTypeIDParameter, rootPathIDParameter, statusParameter, isUGCParameter, uGCMetaDataParameter, message);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="recordfileID">No Metadata Documentation available.</param>
        /// <param name="location">No Metadata Documentation available.</param>
        /// <param name="endOffset">No Metadata Documentation available.</param>
        /// <param name="rootPathID">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> Update_IQCore_RecordFile(Nullable<global::System.Guid> recordfileID, global::System.String location, Nullable<global::System.Int32> endOffset, Nullable<global::System.Int32> rootPathID, global::System.String status)
        {
            ObjectParameter recordfileIDParameter;
            if (recordfileID.HasValue)
            {
                recordfileIDParameter = new ObjectParameter("RecordfileID", recordfileID);
            }
            else
            {
                recordfileIDParameter = new ObjectParameter("RecordfileID", typeof(global::System.Guid));
            }
    
            ObjectParameter locationParameter;
            if (location != null)
            {
                locationParameter = new ObjectParameter("Location", location);
            }
            else
            {
                locationParameter = new ObjectParameter("Location", typeof(global::System.String));
            }
    
            ObjectParameter endOffsetParameter;
            if (endOffset.HasValue)
            {
                endOffsetParameter = new ObjectParameter("EndOffset", endOffset);
            }
            else
            {
                endOffsetParameter = new ObjectParameter("EndOffset", typeof(global::System.Int32));
            }
    
            ObjectParameter rootPathIDParameter;
            if (rootPathID.HasValue)
            {
                rootPathIDParameter = new ObjectParameter("RootPathID", rootPathID);
            }
            else
            {
                rootPathIDParameter = new ObjectParameter("RootPathID", typeof(global::System.Int32));
            }
    
            ObjectParameter statusParameter;
            if (status != null)
            {
                statusParameter = new ObjectParameter("Status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("Status", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("Update_IQCore_RecordFile", recordfileIDParameter, locationParameter, endOffsetParameter, rootPathIDParameter, statusParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iQCCKey">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int64>> InsertFiveMinStaging(global::System.String iQCCKey)
        {
            ObjectParameter iQCCKeyParameter;
            if (iQCCKey != null)
            {
                iQCCKeyParameter = new ObjectParameter("IQCCKey", iQCCKey);
            }
            else
            {
                iQCCKeyParameter = new ObjectParameter("IQCCKey", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int64>>("InsertFiveMinStaging", iQCCKeyParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iQCCKey">No Metadata Documentation available.</param>
        public ObjectResult<FiveMinStaging> GetFiveMinStagingByIQCCKey(global::System.String iQCCKey)
        {
            ObjectParameter iQCCKeyParameter;
            if (iQCCKey != null)
            {
                iQCCKeyParameter = new ObjectParameter("IQCCKey", iQCCKey);
            }
            else
            {
                iQCCKeyParameter = new ObjectParameter("IQCCKey", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<FiveMinStaging>("GetFiveMinStagingByIQCCKey", iQCCKeyParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iQCCKey">No Metadata Documentation available.</param>
        /// <param name="recordFileGuid">No Metadata Documentation available.</param>
        /// <param name="lastMediaSegment">No Metadata Documentation available.</param>
        /// <param name="mediaStatus">No Metadata Documentation available.</param>
        /// <param name="mediaFilename">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> UpdateFiveMinStaging(global::System.String iQCCKey, Nullable<global::System.Guid> recordFileGuid, Nullable<global::System.Int32> lastMediaSegment, global::System.String mediaStatus, global::System.String mediaFilename)
        {
            ObjectParameter iQCCKeyParameter;
            if (iQCCKey != null)
            {
                iQCCKeyParameter = new ObjectParameter("IQCCKey", iQCCKey);
            }
            else
            {
                iQCCKeyParameter = new ObjectParameter("IQCCKey", typeof(global::System.String));
            }
    
            ObjectParameter recordFileGuidParameter;
            if (recordFileGuid.HasValue)
            {
                recordFileGuidParameter = new ObjectParameter("RecordFileGuid", recordFileGuid);
            }
            else
            {
                recordFileGuidParameter = new ObjectParameter("RecordFileGuid", typeof(global::System.Guid));
            }
    
            ObjectParameter lastMediaSegmentParameter;
            if (lastMediaSegment.HasValue)
            {
                lastMediaSegmentParameter = new ObjectParameter("LastMediaSegment", lastMediaSegment);
            }
            else
            {
                lastMediaSegmentParameter = new ObjectParameter("LastMediaSegment", typeof(global::System.Int32));
            }
    
            ObjectParameter mediaStatusParameter;
            if (mediaStatus != null)
            {
                mediaStatusParameter = new ObjectParameter("MediaStatus", mediaStatus);
            }
            else
            {
                mediaStatusParameter = new ObjectParameter("MediaStatus", typeof(global::System.String));
            }
    
            ObjectParameter mediaFilenameParameter;
            if (mediaFilename != null)
            {
                mediaFilenameParameter = new ObjectParameter("MediaFilename", mediaFilename);
            }
            else
            {
                mediaFilenameParameter = new ObjectParameter("MediaFilename", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("UpdateFiveMinStaging", iQCCKeyParameter, recordFileGuidParameter, lastMediaSegmentParameter, mediaStatusParameter, mediaFilenameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="ip_adress_mask">No Metadata Documentation available.</param>
        public ObjectResult<RootPath> GetActiveRootPathByIP(global::System.String ip_adress_mask)
        {
            ObjectParameter ip_adress_maskParameter;
            if (ip_adress_mask != null)
            {
                ip_adress_maskParameter = new ObjectParameter("ip_adress_mask", ip_adress_mask);
            }
            else
            {
                ip_adress_maskParameter = new ObjectParameter("ip_adress_mask", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<RootPath>("GetActiveRootPathByIP", ip_adress_maskParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> UpdateRootPathStatus(Nullable<global::System.Int64> iD, Nullable<global::System.Boolean> status)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int64));
            }
    
            ObjectParameter statusParameter;
            if (status.HasValue)
            {
                statusParameter = new ObjectParameter("status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("status", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("UpdateRootPathStatus", iDParameter, statusParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sourceID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Guid>> GetSourceGUIDBySourceID(global::System.String sourceID)
        {
            ObjectParameter sourceIDParameter;
            if (sourceID != null)
            {
                sourceIDParameter = new ObjectParameter("SourceID", sourceID);
            }
            else
            {
                sourceIDParameter = new ObjectParameter("SourceID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Guid>>("GetSourceGUIDBySourceID", sourceIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iQ_CC_Key">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int64>> InsertIQFiveMinStagingWithCC(global::System.String iQ_CC_Key)
        {
            ObjectParameter iQ_CC_KeyParameter;
            if (iQ_CC_Key != null)
            {
                iQ_CC_KeyParameter = new ObjectParameter("IQ_CC_Key", iQ_CC_Key);
            }
            else
            {
                iQ_CC_KeyParameter = new ObjectParameter("IQ_CC_Key", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int64>>("InsertIQFiveMinStagingWithCC", iQ_CC_KeyParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iQ_CC_Key">No Metadata Documentation available.</param>
        public ObjectResult<FiveMinStagingCC> GetFiveMinStagingCCByIQCCKey(global::System.String iQ_CC_Key)
        {
            ObjectParameter iQ_CC_KeyParameter;
            if (iQ_CC_Key != null)
            {
                iQ_CC_KeyParameter = new ObjectParameter("IQ_CC_Key", iQ_CC_Key);
            }
            else
            {
                iQ_CC_KeyParameter = new ObjectParameter("IQ_CC_Key", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<FiveMinStagingCC>("GetFiveMinStagingCCByIQCCKey", iQ_CC_KeyParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iQCCKey">No Metadata Documentation available.</param>
        /// <param name="recordFileGuid">No Metadata Documentation available.</param>
        /// <param name="lastCCTextSegment">No Metadata Documentation available.</param>
        /// <param name="cCTxtFilename">No Metadata Documentation available.</param>
        /// <param name="cCTxtStatus">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> UpdateFiveMinStagingCC(global::System.String iQCCKey, Nullable<global::System.Guid> recordFileGuid, Nullable<global::System.Int32> lastCCTextSegment, global::System.String cCTxtFilename, global::System.String cCTxtStatus)
        {
            ObjectParameter iQCCKeyParameter;
            if (iQCCKey != null)
            {
                iQCCKeyParameter = new ObjectParameter("IQCCKey", iQCCKey);
            }
            else
            {
                iQCCKeyParameter = new ObjectParameter("IQCCKey", typeof(global::System.String));
            }
    
            ObjectParameter recordFileGuidParameter;
            if (recordFileGuid.HasValue)
            {
                recordFileGuidParameter = new ObjectParameter("RecordFileGuid", recordFileGuid);
            }
            else
            {
                recordFileGuidParameter = new ObjectParameter("RecordFileGuid", typeof(global::System.Guid));
            }
    
            ObjectParameter lastCCTextSegmentParameter;
            if (lastCCTextSegment.HasValue)
            {
                lastCCTextSegmentParameter = new ObjectParameter("LastCCTextSegment", lastCCTextSegment);
            }
            else
            {
                lastCCTextSegmentParameter = new ObjectParameter("LastCCTextSegment", typeof(global::System.Int32));
            }
    
            ObjectParameter cCTxtFilenameParameter;
            if (cCTxtFilename != null)
            {
                cCTxtFilenameParameter = new ObjectParameter("CCTxtFilename", cCTxtFilename);
            }
            else
            {
                cCTxtFilenameParameter = new ObjectParameter("CCTxtFilename", typeof(global::System.String));
            }
    
            ObjectParameter cCTxtStatusParameter;
            if (cCTxtStatus != null)
            {
                cCTxtStatusParameter = new ObjectParameter("CCTxtStatus", cCTxtStatus);
            }
            else
            {
                cCTxtStatusParameter = new ObjectParameter("CCTxtStatus", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("UpdateFiveMinStagingCC", iQCCKeyParameter, recordFileGuidParameter, lastCCTextSegmentParameter, cCTxtFilenameParameter, cCTxtStatusParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="stationID">No Metadata Documentation available.</param>
        public ObjectResult<FiveMinIngestParam> GetParamsForFiveMinDuration(global::System.String stationID)
        {
            ObjectParameter stationIDParameter;
            if (stationID != null)
            {
                stationIDParameter = new ObjectParameter("StationID", stationID);
            }
            else
            {
                stationIDParameter = new ObjectParameter("StationID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<FiveMinIngestParam>("GetParamsForFiveMinDuration", stationIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="stationID">No Metadata Documentation available.</param>
        public ObjectResult<OneHourIngestParam> GetParamsForOneHourDuration(global::System.String stationID)
        {
            ObjectParameter stationIDParameter;
            if (stationID != null)
            {
                stationIDParameter = new ObjectParameter("StationID", stationID);
            }
            else
            {
                stationIDParameter = new ObjectParameter("StationID", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<OneHourIngestParam>("GetParamsForOneHourDuration", stationIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="stationID">No Metadata Documentation available.</param>
        /// <param name="iQ_CC_Key">No Metadata Documentation available.</param>
        /// <param name="mediaType">No Metadata Documentation available.</param>
        /// <param name="date">No Metadata Documentation available.</param>
        /// <param name="level">No Metadata Documentation available.</param>
        /// <param name="logger">No Metadata Documentation available.</param>
        /// <param name="logMessage">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int64>> InsertIQLog_Ingestion(global::System.String stationID, global::System.String iQ_CC_Key, global::System.String mediaType, Nullable<global::System.DateTime> date, global::System.String level, global::System.String logger, global::System.String logMessage)
        {
            ObjectParameter stationIDParameter;
            if (stationID != null)
            {
                stationIDParameter = new ObjectParameter("StationID", stationID);
            }
            else
            {
                stationIDParameter = new ObjectParameter("StationID", typeof(global::System.String));
            }
    
            ObjectParameter iQ_CC_KeyParameter;
            if (iQ_CC_Key != null)
            {
                iQ_CC_KeyParameter = new ObjectParameter("IQ_CC_Key", iQ_CC_Key);
            }
            else
            {
                iQ_CC_KeyParameter = new ObjectParameter("IQ_CC_Key", typeof(global::System.String));
            }
    
            ObjectParameter mediaTypeParameter;
            if (mediaType != null)
            {
                mediaTypeParameter = new ObjectParameter("MediaType", mediaType);
            }
            else
            {
                mediaTypeParameter = new ObjectParameter("MediaType", typeof(global::System.String));
            }
    
            ObjectParameter dateParameter;
            if (date.HasValue)
            {
                dateParameter = new ObjectParameter("date", date);
            }
            else
            {
                dateParameter = new ObjectParameter("date", typeof(global::System.DateTime));
            }
    
            ObjectParameter levelParameter;
            if (level != null)
            {
                levelParameter = new ObjectParameter("Level", level);
            }
            else
            {
                levelParameter = new ObjectParameter("Level", typeof(global::System.String));
            }
    
            ObjectParameter loggerParameter;
            if (logger != null)
            {
                loggerParameter = new ObjectParameter("Logger", logger);
            }
            else
            {
                loggerParameter = new ObjectParameter("Logger", typeof(global::System.String));
            }
    
            ObjectParameter logMessageParameter;
            if (logMessage != null)
            {
                logMessageParameter = new ObjectParameter("LogMessage", logMessage);
            }
            else
            {
                logMessageParameter = new ObjectParameter("LogMessage", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int64>>("InsertIQLog_Ingestion", stationIDParameter, iQ_CC_KeyParameter, mediaTypeParameter, dateParameter, levelParameter, loggerParameter, logMessageParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mediaGUID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> CheckClipByRecordFileGUID(Nullable<global::System.Guid> mediaGUID)
        {
            ObjectParameter mediaGUIDParameter;
            if (mediaGUID.HasValue)
            {
                mediaGUIDParameter = new ObjectParameter("MediaGUID", mediaGUID);
            }
            else
            {
                mediaGUIDParameter = new ObjectParameter("MediaGUID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("CheckClipByRecordFileGUID", mediaGUIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="recordFileGUID">No Metadata Documentation available.</param>
        public ObjectResult<MediaLocation> GetMediaLocationByRecordFileGUID(Nullable<global::System.Guid> recordFileGUID)
        {
            ObjectParameter recordFileGUIDParameter;
            if (recordFileGUID.HasValue)
            {
                recordFileGUIDParameter = new ObjectParameter("RecordFileGUID", recordFileGUID);
            }
            else
            {
                recordFileGUIDParameter = new ObjectParameter("RecordFileGUID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<MediaLocation>("GetMediaLocationByRecordFileGUID", recordFileGUIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="recordGuid">No Metadata Documentation available.</param>
        /// <param name="status">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> UpdateIQCoreRecordFileStatus(Nullable<global::System.Guid> recordGuid, global::System.String status)
        {
            ObjectParameter recordGuidParameter;
            if (recordGuid.HasValue)
            {
                recordGuidParameter = new ObjectParameter("RecordGuid", recordGuid);
            }
            else
            {
                recordGuidParameter = new ObjectParameter("RecordGuid", typeof(global::System.Guid));
            }
    
            ObjectParameter statusParameter;
            if (status != null)
            {
                statusParameter = new ObjectParameter("Status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("Status", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("UpdateIQCoreRecordFileStatus", recordGuidParameter, statusParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="numRecord">No Metadata Documentation available.</param>
        /// <param name="rPSiteID">No Metadata Documentation available.</param>
        /// <param name="isRemoteLocation">No Metadata Documentation available.</param>
        public ObjectResult<ServiceExpiration> GetServiceExpirationList(Nullable<global::System.Int64> numRecord, global::System.String rPSiteID, Nullable<global::System.Boolean> isRemoteLocation)
        {
            ObjectParameter numRecordParameter;
            if (numRecord.HasValue)
            {
                numRecordParameter = new ObjectParameter("NumRecord", numRecord);
            }
            else
            {
                numRecordParameter = new ObjectParameter("NumRecord", typeof(global::System.Int64));
            }
    
            ObjectParameter rPSiteIDParameter;
            if (rPSiteID != null)
            {
                rPSiteIDParameter = new ObjectParameter("RPSiteID", rPSiteID);
            }
            else
            {
                rPSiteIDParameter = new ObjectParameter("RPSiteID", typeof(global::System.String));
            }
    
            ObjectParameter isRemoteLocationParameter;
            if (isRemoteLocation.HasValue)
            {
                isRemoteLocationParameter = new ObjectParameter("IsRemoteLocation", isRemoteLocation);
            }
            else
            {
                isRemoteLocationParameter = new ObjectParameter("IsRemoteLocation", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<ServiceExpiration>("GetServiceExpirationList", numRecordParameter, rPSiteIDParameter, isRemoteLocationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="status">No Metadata Documentation available.</param>
        /// <param name="recordfileGuid">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> UpdateIQServiceExpirationStatus(global::System.String status, Nullable<global::System.Guid> recordfileGuid)
        {
            ObjectParameter statusParameter;
            if (status != null)
            {
                statusParameter = new ObjectParameter("Status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("Status", typeof(global::System.String));
            }
    
            ObjectParameter recordfileGuidParameter;
            if (recordfileGuid.HasValue)
            {
                recordfileGuidParameter = new ObjectParameter("RecordfileGuid", recordfileGuid);
            }
            else
            {
                recordfileGuidParameter = new ObjectParameter("RecordfileGuid", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("UpdateIQServiceExpirationStatus", statusParameter, recordfileGuidParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IQMediaGroupModel", Name="IQ_Five_Min_Staging")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IQ_Five_Min_Staging : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IQ_Five_Min_Staging object.
        /// </summary>
        /// <param name="iQ_FiveMS_Key">Initial value of the IQ_FiveMS_Key property.</param>
        public static IQ_Five_Min_Staging CreateIQ_Five_Min_Staging(global::System.Int64 iQ_FiveMS_Key)
        {
            IQ_Five_Min_Staging iQ_Five_Min_Staging = new IQ_Five_Min_Staging();
            iQ_Five_Min_Staging.IQ_FiveMS_Key = iQ_FiveMS_Key;
            return iQ_Five_Min_Staging;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IQ_FiveMS_Key
        {
            get
            {
                return _IQ_FiveMS_Key;
            }
            set
            {
                if (_IQ_FiveMS_Key != value)
                {
                    OnIQ_FiveMS_KeyChanging(value);
                    ReportPropertyChanging("IQ_FiveMS_Key");
                    _IQ_FiveMS_Key = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IQ_FiveMS_Key");
                    OnIQ_FiveMS_KeyChanged();
                }
            }
        }
        private global::System.Int64 _IQ_FiveMS_Key;
        partial void OnIQ_FiveMS_KeyChanging(global::System.Int64 value);
        partial void OnIQ_FiveMS_KeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IQ_CC_Key
        {
            get
            {
                return _IQ_CC_Key;
            }
            set
            {
                OnIQ_CC_KeyChanging(value);
                ReportPropertyChanging("IQ_CC_Key");
                _IQ_CC_Key = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IQ_CC_Key");
                OnIQ_CC_KeyChanged();
            }
        }
        private global::System.String _IQ_CC_Key;
        partial void OnIQ_CC_KeyChanging(global::System.String value);
        partial void OnIQ_CC_KeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Media_Recordfile_GUID
        {
            get
            {
                return _Media_Recordfile_GUID;
            }
            set
            {
                OnMedia_Recordfile_GUIDChanging(value);
                ReportPropertyChanging("Media_Recordfile_GUID");
                _Media_Recordfile_GUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Media_Recordfile_GUID");
                OnMedia_Recordfile_GUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _Media_Recordfile_GUID;
        partial void OnMedia_Recordfile_GUIDChanging(Nullable<global::System.Guid> value);
        partial void OnMedia_Recordfile_GUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Last_Media_Segment
        {
            get
            {
                return _Last_Media_Segment;
            }
            set
            {
                OnLast_Media_SegmentChanging(value);
                ReportPropertyChanging("Last_Media_Segment");
                _Last_Media_Segment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Last_Media_Segment");
                OnLast_Media_SegmentChanged();
            }
        }
        private Nullable<global::System.Int32> _Last_Media_Segment;
        partial void OnLast_Media_SegmentChanging(Nullable<global::System.Int32> value);
        partial void OnLast_Media_SegmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Current_Active_Media_File
        {
            get
            {
                return _Current_Active_Media_File;
            }
            set
            {
                OnCurrent_Active_Media_FileChanging(value);
                ReportPropertyChanging("Current_Active_Media_File");
                _Current_Active_Media_File = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Current_Active_Media_File");
                OnCurrent_Active_Media_FileChanged();
            }
        }
        private global::System.String _Current_Active_Media_File;
        partial void OnCurrent_Active_Media_FileChanging(global::System.String value);
        partial void OnCurrent_Active_Media_FileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CCTxt_Recordfile_GUID
        {
            get
            {
                return _CCTxt_Recordfile_GUID;
            }
            set
            {
                OnCCTxt_Recordfile_GUIDChanging(value);
                ReportPropertyChanging("CCTxt_Recordfile_GUID");
                _CCTxt_Recordfile_GUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CCTxt_Recordfile_GUID");
                OnCCTxt_Recordfile_GUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _CCTxt_Recordfile_GUID;
        partial void OnCCTxt_Recordfile_GUIDChanging(Nullable<global::System.Guid> value);
        partial void OnCCTxt_Recordfile_GUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Media_Process_Status
        {
            get
            {
                return _Media_Process_Status;
            }
            set
            {
                OnMedia_Process_StatusChanging(value);
                ReportPropertyChanging("Media_Process_Status");
                _Media_Process_Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Media_Process_Status");
                OnMedia_Process_StatusChanged();
            }
        }
        private global::System.String _Media_Process_Status;
        partial void OnMedia_Process_StatusChanging(global::System.String value);
        partial void OnMedia_Process_StatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Last_CCTxt_Segment
        {
            get
            {
                return _Last_CCTxt_Segment;
            }
            set
            {
                OnLast_CCTxt_SegmentChanging(value);
                ReportPropertyChanging("Last_CCTxt_Segment");
                _Last_CCTxt_Segment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Last_CCTxt_Segment");
                OnLast_CCTxt_SegmentChanged();
            }
        }
        private Nullable<global::System.Int32> _Last_CCTxt_Segment;
        partial void OnLast_CCTxt_SegmentChanging(Nullable<global::System.Int32> value);
        partial void OnLast_CCTxt_SegmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Current_Active_CCTxt_File
        {
            get
            {
                return _Current_Active_CCTxt_File;
            }
            set
            {
                OnCurrent_Active_CCTxt_FileChanging(value);
                ReportPropertyChanging("Current_Active_CCTxt_File");
                _Current_Active_CCTxt_File = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Current_Active_CCTxt_File");
                OnCurrent_Active_CCTxt_FileChanged();
            }
        }
        private global::System.String _Current_Active_CCTxt_File;
        partial void OnCurrent_Active_CCTxt_FileChanging(global::System.String value);
        partial void OnCurrent_Active_CCTxt_FileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CC_Process_Status
        {
            get
            {
                return _CC_Process_Status;
            }
            set
            {
                OnCC_Process_StatusChanging(value);
                ReportPropertyChanging("CC_Process_Status");
                _CC_Process_Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CC_Process_Status");
                OnCC_Process_StatusChanged();
            }
        }
        private global::System.String _CC_Process_Status;
        partial void OnCC_Process_StatusChanging(global::System.String value);
        partial void OnCC_Process_StatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="IQMediaGroupModel", Name="FiveMinIngestParam")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class FiveMinIngestParam : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FiveMinIngestParam object.
        /// </summary>
        /// <param name="logFolder">Initial value of the LogFolder property.</param>
        /// <param name="logLevel">Initial value of the LogLevel property.</param>
        /// <param name="inputFolder">Initial value of the InputFolder property.</param>
        /// <param name="mediaStagingFolder">Initial value of the MediaStagingFolder property.</param>
        /// <param name="stationID">Initial value of the StationID property.</param>
        /// <param name="rPLocationIP">Initial value of the RPLocationIP property.</param>
        /// <param name="duplicateFolder">Initial value of the DuplicateFolder property.</param>
        /// <param name="processedFolder">Initial value of the ProcessedFolder property.</param>
        /// <param name="mP4Boxlocation">Initial value of the MP4Boxlocation property.</param>
        /// <param name="mP4Boxtempdir">Initial value of the MP4Boxtempdir property.</param>
        public static FiveMinIngestParam CreateFiveMinIngestParam(global::System.String logFolder, global::System.String logLevel, global::System.String inputFolder, global::System.String mediaStagingFolder, global::System.String stationID, global::System.String rPLocationIP, global::System.String duplicateFolder, global::System.String processedFolder, global::System.String mP4Boxlocation, global::System.String mP4Boxtempdir)
        {
            FiveMinIngestParam fiveMinIngestParam = new FiveMinIngestParam();
            fiveMinIngestParam.LogFolder = logFolder;
            fiveMinIngestParam.LogLevel = logLevel;
            fiveMinIngestParam.InputFolder = inputFolder;
            fiveMinIngestParam.MediaStagingFolder = mediaStagingFolder;
            fiveMinIngestParam.StationID = stationID;
            fiveMinIngestParam.RPLocationIP = rPLocationIP;
            fiveMinIngestParam.DuplicateFolder = duplicateFolder;
            fiveMinIngestParam.ProcessedFolder = processedFolder;
            fiveMinIngestParam.MP4Boxlocation = mP4Boxlocation;
            fiveMinIngestParam.MP4Boxtempdir = mP4Boxtempdir;
            return fiveMinIngestParam;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LogFolder
        {
            get
            {
                return _LogFolder;
            }
            set
            {
                OnLogFolderChanging(value);
                ReportPropertyChanging("LogFolder");
                _LogFolder = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LogFolder");
                OnLogFolderChanged();
            }
        }
        private global::System.String _LogFolder;
        partial void OnLogFolderChanging(global::System.String value);
        partial void OnLogFolderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LogLevel
        {
            get
            {
                return _LogLevel;
            }
            set
            {
                OnLogLevelChanging(value);
                ReportPropertyChanging("LogLevel");
                _LogLevel = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LogLevel");
                OnLogLevelChanged();
            }
        }
        private global::System.String _LogLevel;
        partial void OnLogLevelChanging(global::System.String value);
        partial void OnLogLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InputFolder
        {
            get
            {
                return _InputFolder;
            }
            set
            {
                OnInputFolderChanging(value);
                ReportPropertyChanging("InputFolder");
                _InputFolder = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InputFolder");
                OnInputFolderChanged();
            }
        }
        private global::System.String _InputFolder;
        partial void OnInputFolderChanging(global::System.String value);
        partial void OnInputFolderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MediaStagingFolder
        {
            get
            {
                return _MediaStagingFolder;
            }
            set
            {
                OnMediaStagingFolderChanging(value);
                ReportPropertyChanging("MediaStagingFolder");
                _MediaStagingFolder = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MediaStagingFolder");
                OnMediaStagingFolderChanged();
            }
        }
        private global::System.String _MediaStagingFolder;
        partial void OnMediaStagingFolderChanging(global::System.String value);
        partial void OnMediaStagingFolderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StationID
        {
            get
            {
                return _StationID;
            }
            set
            {
                OnStationIDChanging(value);
                ReportPropertyChanging("StationID");
                _StationID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StationID");
                OnStationIDChanged();
            }
        }
        private global::System.String _StationID;
        partial void OnStationIDChanging(global::System.String value);
        partial void OnStationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RPLocationIP
        {
            get
            {
                return _RPLocationIP;
            }
            set
            {
                OnRPLocationIPChanging(value);
                ReportPropertyChanging("RPLocationIP");
                _RPLocationIP = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RPLocationIP");
                OnRPLocationIPChanged();
            }
        }
        private global::System.String _RPLocationIP;
        partial void OnRPLocationIPChanging(global::System.String value);
        partial void OnRPLocationIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StagingRootPathID
        {
            get
            {
                return _StagingRootPathID;
            }
            set
            {
                OnStagingRootPathIDChanging(value);
                ReportPropertyChanging("StagingRootPathID");
                _StagingRootPathID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StagingRootPathID");
                OnStagingRootPathIDChanged();
            }
        }
        private Nullable<global::System.Int32> _StagingRootPathID;
        partial void OnStagingRootPathIDChanging(Nullable<global::System.Int32> value);
        partial void OnStagingRootPathIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DuplicateFolder
        {
            get
            {
                return _DuplicateFolder;
            }
            set
            {
                OnDuplicateFolderChanging(value);
                ReportPropertyChanging("DuplicateFolder");
                _DuplicateFolder = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DuplicateFolder");
                OnDuplicateFolderChanged();
            }
        }
        private global::System.String _DuplicateFolder;
        partial void OnDuplicateFolderChanging(global::System.String value);
        partial void OnDuplicateFolderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProcessedFolder
        {
            get
            {
                return _ProcessedFolder;
            }
            set
            {
                OnProcessedFolderChanging(value);
                ReportPropertyChanging("ProcessedFolder");
                _ProcessedFolder = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProcessedFolder");
                OnProcessedFolderChanged();
            }
        }
        private global::System.String _ProcessedFolder;
        partial void OnProcessedFolderChanging(global::System.String value);
        partial void OnProcessedFolderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MP4Boxlocation
        {
            get
            {
                return _MP4Boxlocation;
            }
            set
            {
                OnMP4BoxlocationChanging(value);
                ReportPropertyChanging("MP4Boxlocation");
                _MP4Boxlocation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MP4Boxlocation");
                OnMP4BoxlocationChanged();
            }
        }
        private global::System.String _MP4Boxlocation;
        partial void OnMP4BoxlocationChanging(global::System.String value);
        partial void OnMP4BoxlocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MP4Boxtempdir
        {
            get
            {
                return _MP4Boxtempdir;
            }
            set
            {
                OnMP4BoxtempdirChanging(value);
                ReportPropertyChanging("MP4Boxtempdir");
                _MP4Boxtempdir = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MP4Boxtempdir");
                OnMP4BoxtempdirChanged();
            }
        }
        private global::System.String _MP4Boxtempdir;
        partial void OnMP4BoxtempdirChanging(global::System.String value);
        partial void OnMP4BoxtempdirChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="IQMediaGroupModel", Name="FiveMinStaging")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class FiveMinStaging : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String recordFileGuid
        {
            get
            {
                return _recordFileGuid;
            }
            set
            {
                OnrecordFileGuidChanging(value);
                ReportPropertyChanging("recordFileGuid");
                _recordFileGuid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("recordFileGuid");
                OnrecordFileGuidChanged();
            }
        }
        private global::System.String _recordFileGuid;
        partial void OnrecordFileGuidChanging(global::System.String value);
        partial void OnrecordFileGuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String lastMediaSeg
        {
            get
            {
                return _lastMediaSeg;
            }
            set
            {
                OnlastMediaSegChanging(value);
                ReportPropertyChanging("lastMediaSeg");
                _lastMediaSeg = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("lastMediaSeg");
                OnlastMediaSegChanged();
            }
        }
        private global::System.String _lastMediaSeg;
        partial void OnlastMediaSegChanging(global::System.String value);
        partial void OnlastMediaSegChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String mediaStatus
        {
            get
            {
                return _mediaStatus;
            }
            set
            {
                OnmediaStatusChanging(value);
                ReportPropertyChanging("mediaStatus");
                _mediaStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("mediaStatus");
                OnmediaStatusChanged();
            }
        }
        private global::System.String _mediaStatus;
        partial void OnmediaStatusChanging(global::System.String value);
        partial void OnmediaStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String mediaFilename
        {
            get
            {
                return _mediaFilename;
            }
            set
            {
                OnmediaFilenameChanging(value);
                ReportPropertyChanging("mediaFilename");
                _mediaFilename = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("mediaFilename");
                OnmediaFilenameChanged();
            }
        }
        private global::System.String _mediaFilename;
        partial void OnmediaFilenameChanging(global::System.String value);
        partial void OnmediaFilenameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="IQMediaGroupModel", Name="FiveMinStagingCC")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class FiveMinStagingCC : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ccStatus
        {
            get
            {
                return _ccStatus;
            }
            set
            {
                OnccStatusChanging(value);
                ReportPropertyChanging("ccStatus");
                _ccStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ccStatus");
                OnccStatusChanged();
            }
        }
        private global::System.String _ccStatus;
        partial void OnccStatusChanging(global::System.String value);
        partial void OnccStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String recordFileGuid
        {
            get
            {
                return _recordFileGuid;
            }
            set
            {
                OnrecordFileGuidChanging(value);
                ReportPropertyChanging("recordFileGuid");
                _recordFileGuid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("recordFileGuid");
                OnrecordFileGuidChanged();
            }
        }
        private global::System.String _recordFileGuid;
        partial void OnrecordFileGuidChanging(global::System.String value);
        partial void OnrecordFileGuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CCTxtFilename
        {
            get
            {
                return _CCTxtFilename;
            }
            set
            {
                OnCCTxtFilenameChanging(value);
                ReportPropertyChanging("CCTxtFilename");
                _CCTxtFilename = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CCTxtFilename");
                OnCCTxtFilenameChanged();
            }
        }
        private global::System.String _CCTxtFilename;
        partial void OnCCTxtFilenameChanging(global::System.String value);
        partial void OnCCTxtFilenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String lastCCTxtSegment
        {
            get
            {
                return _lastCCTxtSegment;
            }
            set
            {
                OnlastCCTxtSegmentChanging(value);
                ReportPropertyChanging("lastCCTxtSegment");
                _lastCCTxtSegment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("lastCCTxtSegment");
                OnlastCCTxtSegmentChanged();
            }
        }
        private global::System.String _lastCCTxtSegment;
        partial void OnlastCCTxtSegmentChanging(global::System.String value);
        partial void OnlastCCTxtSegmentChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="IQMediaGroupModel", Name="MediaLocation")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class MediaLocation : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MediaLocation object.
        /// </summary>
        /// <param name="gUID">Initial value of the GUID property.</param>
        /// <param name="fullLocation">Initial value of the FullLocation property.</param>
        /// <param name="mediaStatus">Initial value of the MediaStatus property.</param>
        public static MediaLocation CreateMediaLocation(global::System.Guid gUID, global::System.String fullLocation, global::System.String mediaStatus)
        {
            MediaLocation mediaLocation = new MediaLocation();
            mediaLocation.GUID = gUID;
            mediaLocation.FullLocation = fullLocation;
            mediaLocation.MediaStatus = mediaStatus;
            return mediaLocation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GUID
        {
            get
            {
                return _GUID;
            }
            set
            {
                OnGUIDChanging(value);
                ReportPropertyChanging("GUID");
                _GUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GUID");
                OnGUIDChanged();
            }
        }
        private global::System.Guid _GUID;
        partial void OnGUIDChanging(global::System.Guid value);
        partial void OnGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullLocation
        {
            get
            {
                return _FullLocation;
            }
            set
            {
                OnFullLocationChanging(value);
                ReportPropertyChanging("FullLocation");
                _FullLocation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullLocation");
                OnFullLocationChanged();
            }
        }
        private global::System.String _FullLocation;
        partial void OnFullLocationChanging(global::System.String value);
        partial void OnFullLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MediaStatus
        {
            get
            {
                return _MediaStatus;
            }
            set
            {
                OnMediaStatusChanging(value);
                ReportPropertyChanging("MediaStatus");
                _MediaStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MediaStatus");
                OnMediaStatusChanged();
            }
        }
        private global::System.String _MediaStatus;
        partial void OnMediaStatusChanging(global::System.String value);
        partial void OnMediaStatusChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="IQMediaGroupModel", Name="OneHourIngestParam")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OneHourIngestParam : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OneHourIngestParam object.
        /// </summary>
        /// <param name="logFolder">Initial value of the LogFolder property.</param>
        /// <param name="logLevel">Initial value of the LogLevel property.</param>
        /// <param name="inputFolder">Initial value of the InputFolder property.</param>
        /// <param name="stationID">Initial value of the StationID property.</param>
        /// <param name="rPLocationIP">Initial value of the RPLocationIP property.</param>
        /// <param name="mediaFileType">Initial value of the MediaFileType property.</param>
        public static OneHourIngestParam CreateOneHourIngestParam(global::System.String logFolder, global::System.String logLevel, global::System.String inputFolder, global::System.String stationID, global::System.String rPLocationIP, global::System.String mediaFileType)
        {
            OneHourIngestParam oneHourIngestParam = new OneHourIngestParam();
            oneHourIngestParam.LogFolder = logFolder;
            oneHourIngestParam.LogLevel = logLevel;
            oneHourIngestParam.InputFolder = inputFolder;
            oneHourIngestParam.StationID = stationID;
            oneHourIngestParam.RPLocationIP = rPLocationIP;
            oneHourIngestParam.MediaFileType = mediaFileType;
            return oneHourIngestParam;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LogFolder
        {
            get
            {
                return _LogFolder;
            }
            set
            {
                OnLogFolderChanging(value);
                ReportPropertyChanging("LogFolder");
                _LogFolder = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LogFolder");
                OnLogFolderChanged();
            }
        }
        private global::System.String _LogFolder;
        partial void OnLogFolderChanging(global::System.String value);
        partial void OnLogFolderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LogLevel
        {
            get
            {
                return _LogLevel;
            }
            set
            {
                OnLogLevelChanging(value);
                ReportPropertyChanging("LogLevel");
                _LogLevel = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LogLevel");
                OnLogLevelChanged();
            }
        }
        private global::System.String _LogLevel;
        partial void OnLogLevelChanging(global::System.String value);
        partial void OnLogLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InputFolder
        {
            get
            {
                return _InputFolder;
            }
            set
            {
                OnInputFolderChanging(value);
                ReportPropertyChanging("InputFolder");
                _InputFolder = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InputFolder");
                OnInputFolderChanged();
            }
        }
        private global::System.String _InputFolder;
        partial void OnInputFolderChanging(global::System.String value);
        partial void OnInputFolderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StationID
        {
            get
            {
                return _StationID;
            }
            set
            {
                OnStationIDChanging(value);
                ReportPropertyChanging("StationID");
                _StationID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StationID");
                OnStationIDChanged();
            }
        }
        private global::System.String _StationID;
        partial void OnStationIDChanging(global::System.String value);
        partial void OnStationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RPLocationIP
        {
            get
            {
                return _RPLocationIP;
            }
            set
            {
                OnRPLocationIPChanging(value);
                ReportPropertyChanging("RPLocationIP");
                _RPLocationIP = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RPLocationIP");
                OnRPLocationIPChanged();
            }
        }
        private global::System.String _RPLocationIP;
        partial void OnRPLocationIPChanging(global::System.String value);
        partial void OnRPLocationIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MediaFileType
        {
            get
            {
                return _MediaFileType;
            }
            set
            {
                OnMediaFileTypeChanging(value);
                ReportPropertyChanging("MediaFileType");
                _MediaFileType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MediaFileType");
                OnMediaFileTypeChanged();
            }
        }
        private global::System.String _MediaFileType;
        partial void OnMediaFileTypeChanging(global::System.String value);
        partial void OnMediaFileTypeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="IQMediaGroupModel", Name="RootPath")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class RootPath : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RootPath object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="rootPathTypeID">Initial value of the rootPathTypeID property.</param>
        /// <param name="storagePath">Initial value of the storagePath property.</param>
        public static RootPath CreateRootPath(global::System.Int32 id, global::System.Int32 rootPathTypeID, global::System.String storagePath)
        {
            RootPath rootPath = new RootPath();
            rootPath.id = id;
            rootPath.rootPathTypeID = rootPathTypeID;
            rootPath.storagePath = storagePath;
            return rootPath;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                OnidChanging(value);
                ReportPropertyChanging("id");
                _id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id");
                OnidChanged();
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isActive
        {
            get
            {
                return _isActive;
            }
            set
            {
                OnisActiveChanging(value);
                ReportPropertyChanging("isActive");
                _isActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isActive");
                OnisActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _isActive;
        partial void OnisActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnisActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 rootPathTypeID
        {
            get
            {
                return _rootPathTypeID;
            }
            set
            {
                OnrootPathTypeIDChanging(value);
                ReportPropertyChanging("rootPathTypeID");
                _rootPathTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rootPathTypeID");
                OnrootPathTypeIDChanged();
            }
        }
        private global::System.Int32 _rootPathTypeID;
        partial void OnrootPathTypeIDChanging(global::System.Int32 value);
        partial void OnrootPathTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String storagePath
        {
            get
            {
                return _storagePath;
            }
            set
            {
                OnstoragePathChanging(value);
                ReportPropertyChanging("storagePath");
                _storagePath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("storagePath");
                OnstoragePathChanged();
            }
        }
        private global::System.String _storagePath;
        partial void OnstoragePathChanging(global::System.String value);
        partial void OnstoragePathChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="IQMediaGroupModel", Name="ServiceExpiration")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ServiceExpiration : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceExpiration object.
        /// </summary>
        /// <param name="gUID">Initial value of the GUID property.</param>
        /// <param name="iQCCKey">Initial value of the IQCCKey property.</param>
        public static ServiceExpiration CreateServiceExpiration(global::System.Guid gUID, global::System.String iQCCKey)
        {
            ServiceExpiration serviceExpiration = new ServiceExpiration();
            serviceExpiration.GUID = gUID;
            serviceExpiration.IQCCKey = iQCCKey;
            return serviceExpiration;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GUID
        {
            get
            {
                return _GUID;
            }
            set
            {
                OnGUIDChanging(value);
                ReportPropertyChanging("GUID");
                _GUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GUID");
                OnGUIDChanged();
            }
        }
        private global::System.Guid _GUID;
        partial void OnGUIDChanging(global::System.Guid value);
        partial void OnGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IQCCKey
        {
            get
            {
                return _IQCCKey;
            }
            set
            {
                OnIQCCKeyChanging(value);
                ReportPropertyChanging("IQCCKey");
                _IQCCKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IQCCKey");
                OnIQCCKeyChanged();
            }
        }
        private global::System.String _IQCCKey;
        partial void OnIQCCKeyChanging(global::System.String value);
        partial void OnIQCCKeyChanged();

        #endregion

    }

    #endregion

    
}
