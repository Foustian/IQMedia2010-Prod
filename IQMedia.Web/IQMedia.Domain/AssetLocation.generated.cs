//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace IQMedia.Domain
{
    public partial class AssetLocation
    {
        #region Primitive Properties
    
        public virtual System.Guid AssetGuid
        {
            get;
            set;
        }
    
        public virtual int AssetTypeID
        {
            get { return _assetTypeID; }
            set
            {
                if (_assetTypeID != value)
                {
                    if (AssetType != null && AssetType.ID != value)
                    {
                        AssetType = null;
                    }
                    _assetTypeID = value;
                }
            }
        }
        private int _assetTypeID;
    
        public virtual int RootPathID
        {
            get { return _rootPathID; }
            set
            {
                if (_rootPathID != value)
                {
                    if (RootPath != null && RootPath.ID != value)
                    {
                        RootPath = null;
                    }
                    _rootPathID = value;
                }
            }
        }
        private int _rootPathID;
    
        public virtual string Location
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual AssetType AssetType
        {
            get { return _assetType; }
            set
            {
                if (!ReferenceEquals(_assetType, value))
                {
                    var previousValue = _assetType;
                    _assetType = value;
                    FixupAssetType(previousValue);
                }
            }
        }
        private AssetType _assetType;
    
        public virtual RootPath RootPath
        {
            get { return _rootPath; }
            set
            {
                if (!ReferenceEquals(_rootPath, value))
                {
                    var previousValue = _rootPath;
                    _rootPath = value;
                    FixupRootPath(previousValue);
                }
            }
        }
        private RootPath _rootPath;

        #endregion
        #region Association Fixup
    
        private void FixupAssetType(AssetType previousValue)
        {
            if (AssetType != null)
            {
                if (AssetTypeID != AssetType.ID)
                {
                    AssetTypeID = AssetType.ID;
                }
            }
        }
    
        private void FixupRootPath(RootPath previousValue)
        {
            if (RootPath != null)
            {
                if (RootPathID != RootPath.ID)
                {
                    RootPathID = RootPath.ID;
                }
            }
        }

        #endregion
    }
}
