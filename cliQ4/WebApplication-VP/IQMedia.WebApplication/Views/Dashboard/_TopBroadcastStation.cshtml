@using IQMedia.Model;
@model List<DashboardTopResultsModel>
@if (Model != null)
{
    <div>
        <br />
        <br />
        <b>Top Broadcast Outlets</b></div>
    if (Model.Count > 0)
    {
    <table class="topResult" width="100%">
        <tr>
            <th style="text-align: center;width:7%;">
                
            </th>
            <th style="text-align: left;width:7%;">
                Outlet Name
            </th>
            <th style="text-align: left;width:22%;">
                Market (Rank)
            </th>
            <th style="text-align: right;width:11%;">
                # of Mentions
            </th>
            <th style="text-align: right;width:11%;">
                Total Audience
            </th>
            <th style="text-align: right;width:11%;">
                Total Airtime
            </th>
            <th style="text-align: right;width:11%;">
                Media Value
            </th>
            <th style="text-align: right;width:20%;">
                Sentiment
            </th>
        </tr>
        @foreach (DashboardTopResultsModel item in Model)
        {
            <tr>
                <td style="text-align: center;">
                    <img title="@item.Outlet_Name" alt="@item.Outlet_Name" src="http://@(Request.Url.Host)/StationLogoImages/@(item.Outlet_Name).jpg" />
                </td>
                <td style="text-align: left;">
                    <a href="javascript:void(0)" onclick="OpenFeedOutletDma('st','@item.Outlet_Name','@IQMedia.Shared.Utility.CommonFunctions.GetEnumDescription(IQMedia.Shared.Utility.CommonFunctions.CategoryType.TV)')">@item.Outlet_Name</a>
                </td>
                <td style="text-align: left;">
                @{IQMedia.WebApplication.Utility.CommonFunctions.DMAWithOutRank dmaName;}
                    @item.DMA_Name @(Enum.TryParse<IQMedia.WebApplication.Utility.CommonFunctions.DMAWithOutRank>(item.DMA_Name, true, out dmaName) ? string.Empty : "(" + item.DMA_Num + ")")
                </td>
                <td style="text-align: right;">
                    @(string.Format("{0:N0}", item.Mentions))
                </td>
                <td style="text-align: right;">
                    @(string.Format("{0:N0}", item.Audience))
                </td>
                <td style="text-align: right;">
                    @{TimeSpan tp = TimeSpan.FromMinutes((Convert.ToDouble(item.NoOfDocs) * 8) / 60);}
                    @tp.Hours.ToString().PadLeft(2, '0') : @tp.Minutes.ToString().PadLeft(2, '0') :
                    @tp.Seconds.ToString().PadLeft(2, '0')
                </td>
                <td style="text-align: right;">
                    $@(string.Format("{0:N0}", item.MediaValue))
                </td>
                <td style="text-align: right;">
                    @{
                        int posSentiWidth = ((item.PositiveSentiment * 6) > 25 ? ((item.PositiveSentiment.ToString().Length > 3) ? (item.PositiveSentiment.ToString().Length * 7) : 25) : (item.PositiveSentiment * 6));
                        int negSentiWidth = ((item.NegativeSentiment * 6) > 25 ? ((item.NegativeSentiment.ToString().Length > 3) ? (item.NegativeSentiment.ToString().Length * 7) : 25 ) : (item.NegativeSentiment * 6));
                    }
                    <div class="divSentimentMain sentimentFont"  style="width:@((negSentiWidth > 25 ? negSentiWidth : 25) + (posSentiWidth > 25 ? posSentiWidth : 25) + 1)px;">
                        <div class="divSentimentNeg" @(negSentiWidth > 25 ? "style=width:" + negSentiWidth + "px" : string.Empty)>
                            <div style="width: @(negSentiWidth)px;">
                                @if(item.NegativeSentiment > 0)
                                {
                                    <text>@string.Format("{0:N0}", item.NegativeSentiment)</text>
                                }
                                else
                                {
                                    <text>&nbsp;</text>
                                }
                            </div>
                        </div>
                        <div class="divSentimentPos" @(posSentiWidth > 25 ? "style=width:" + posSentiWidth + "px" : string.Empty)>
                            <div style="width: @(posSentiWidth)px;" >
                                @if(item.PositiveSentiment > 0)
                                {
                                    <text>@string.Format("{0:N0}", item.PositiveSentiment)</text>
                                }
                                else
                                {
                                    <text>&nbsp;</text>
                                }
                             </div>
                        </div>
                    </div>
                </td>
            </tr>
        }
    </table>
    }
    else
    {
    <table width="100%" style="text-align: center;">
        <tr>
            <td>
                <span style="background: none repeat scroll 0 0 #F2F2F2; border: 1px solid #DCDCDC;
                    margin-bottom: 10px; margin-right: 10px; padding: 3px 10px 3px 6px; position: relative;
                    width: 300px !important;">No Results found</span>
            </td>
        </tr>
    </table>
    }
}