@using IQMedia.Model;
@using IQMedia.Shared.Utility;
@using System.Configuration;
@model List<DiscoveryMediaResult>
@if (Model != null)
{
    try
    {
        ActiveUser sessionInformation = IQMedia.WebApplication.Utility.ActiveUserMgr.GetActiveUser();
        string mediaIconFormat = "../images/MediaIcon/{0}?v=1.3";

        foreach (DiscoveryMediaResult item in Model)
        {
            string Month = item.Date != null ? item.Date.Value.ToString("MMM", System.Globalization.CultureInfo.InvariantCulture) : string.Empty;
            string Day = item.Date != null ? item.Date.Value.Day.ToString() : string.Empty;
            string Time = item.Date != null && item.MediumType != CommonFunctions.CategoryType.PQ ? item.Date.Value.ToString("hh:mm tt") : string.Empty;
            string maxNegSentmtWidth = string.Empty;
            string maxPosSentmtWidth = string.Empty;
            string body = string.Empty;
            string title = string.Empty;
            string publication = string.Empty;
            string uriPub = item.Publication;
            
            string sLocalAudience = string.Empty;
            string fLocalAudience = string.Empty;
            string sLocalMediaValue = string.Empty;
            string fLocalMediaValue = string.Empty;
            string sNationalAudience = string.Empty;
            string fNationalAudience = string.Empty;
            string sNationalMediaValue = string.Empty;
            string fNationalMediaValue = string.Empty;
                                    
            int Billion = 1000000000;
            decimal BillionD = 1000000000;
            int Million = 1000000;
            decimal MillionD = 1000000;
            
            Uri aUri;
            
            if (!string.IsNullOrEmpty(item.Body))
            {
                if (item.MediumType != CommonFunctions.CategoryType.TW)
                {
                    body = item.Body.Length > 300 ? item.Body.Substring(0, 300) : item.Body;
                }
                else
                {
                    body = item.Body;
                }
                
                body = System.Text.RegularExpressions.Regex.Replace(body, "(</span(?!>)|</spa(?!n>)|</sp(?!an>)|</s(?!pan>)|</(?!span>))\\Z", "</span>");
            }

            if (!string.IsNullOrEmpty(item.Title))
            {
                if (item.Title.Trim().Length > 65)
                {
                    title = item.Title.Trim().Substring(0, 62) + "...";
                }
                else
                {
                    title = item.Title.Trim();
                }
            }

            if (!string.IsNullOrEmpty(item.Publication))
            {
                if (Uri.TryCreate(item.Publication, UriKind.Absolute, out aUri))
                {
                    uriPub = aUri.Host.Replace("www.", string.Empty);
                }
                
                if (item.Publication.Trim().Length > 23)
                {
                    publication = item.Publication.Trim().Substring(0, 21) + "...";
                }
                else
                {
                    publication = item.Publication.Trim();
                }
            }

            if (item.NegativeSentiment.HasValue && item.PositiveSentiment.HasValue)
            {
                if ((item.NegativeSentiment * 6) > 25)
                {
                    maxNegSentmtWidth = "25px";
                }
                else
                {
                    maxNegSentmtWidth = Convert.ToString(item.NegativeSentiment * 6) + "px";
                }

                if ((item.PositiveSentiment * 6) > 25)
                {
                    maxPosSentmtWidth = "25px";
                }
                else
                {
                    maxPosSentmtWidth = Convert.ToString(item.PositiveSentiment * 6) + "px";
                } 
            }

            body = CommonFunctions.ProcessHighlightingText(item.Body, body);
            string hilightedText = string.Empty;
            
            switch (item.MediumType)
            {
                case CommonFunctions.CategoryType.TV:
                    string TVThumbUrl = Convert.ToString(System.Configuration.ConfigurationManager.AppSettings["IQArchieve_TVThumbUrl"]);
                    TVThumbUrl += item.VideoGuid;
                    Month = item.LocalDateTime != null ? item.LocalDateTime.Value.ToString("MMM", System.Globalization.CultureInfo.InvariantCulture) : string.Empty;
                    Day = item.LocalDateTime != null ? item.LocalDateTime.Value.Day.ToString() : string.Empty;
                    Time = item.LocalDateTime != null ? item.LocalDateTime.Value.ToString("hh:mm tt") : string.Empty;

                    if (item.Audience.HasValue && sessionInformation.IsNielsenData)
                    {
                        fLocalAudience = string.Format("{0:N0}", item.Audience);

                        if (item.Audience >= Billion)
                        {
                            sLocalAudience = string.Format("{0:F1} bil", item.Audience / BillionD);
                        }
                        else if (item.Audience >= Million)
                        {
                            sLocalAudience = string.Format("{0:F1} mil", item.Audience / MillionD);
                        }
                        else
                        {
                            sLocalAudience = fLocalAudience;
                        }
                    }
                    else
                    {
                        sLocalAudience = "NA";
                    }
                    
                    if (item.IQAdsharevalue.HasValue && sessionInformation.IsNielsenData)
                    {
                        fLocalMediaValue = string.Format("{0:N2}", item.IQAdsharevalue);

                        if (item.IQAdsharevalue >= BillionD)
                        {
                            sLocalMediaValue = string.Format("{0:F1} bil", item.IQAdsharevalue / BillionD);
                        }
                        else if (item.IQAdsharevalue >= MillionD)
                        {
                            sLocalMediaValue = string.Format("{0:F1} mil", item.IQAdsharevalue / MillionD);
                        }
                        else
                        {
                            sLocalMediaValue = fLocalMediaValue;
                        }
                    }
                
    <div class="media displayNone">
        <div class="MediaDate">
            <div class="post-date">
                <span class="month">@Month</span>
                <div>
                    <span class="today">@Day</span>
                </div>
                <span class="timeWithTimeZone">@Time @item.TimeZone</span>
            </div>
        </div>
        <div class="MediaTypeLogo" align="center">
            <img src="@item.StationLogo" title="@CommonFunctions.GetEnumDescription(CommonFunctions.CategoryType.TV)" />
        </div>
        <div class="float-right FeedsVideoSpacer">
            <div class="FeedsVideo positionRelative float-left">
                <a class="cursorPointer" onclick='LoadPlayerbyGuidTS("@item.VideoGuid",null,"@item.SearchTerm.Replace("\"", "\\\"")");'>
                    <img csrc="@TVThumbUrl" class="media-object" alt="" />
                </a>
            </div>
            <div class="float-right">
                <input type="checkbox" id="ckhTV_@item.VideoGuid" value="@item.VideoGuid,TV" onclick="CheckUncheckMasterCheckBox(this,'divResult','chkInputAll');" />
            </div>
            <div class="clearfix"></div>
        </div>
        <div class="FeedsContentVideo">
            <div class="media-heading float-left" title="@item.Title">
                @title
            </div>
            <div class="subheading float-left margintop1" >
                @item.timeDifference
            </div>
            <div class="clear float-left media-body">
               @Html.Raw(@body)
            </div>
        </div>
        <div class="clear post-divider" />
        <div class="clear margintop2 marginbottom2">
            <div class="FeedsActionBarLeftDiv">
                <div class="viewmore" style="min-height:1px">
                    <!--min-height needed to force expand div-->
                    <!--discovery model has no isRead or children-->
                </div>
                <div class="viewlocation">
                    <div class="">
                        @{
                            if (!string.IsNullOrWhiteSpace(item.Market))
                            {
                                <div class="location-tag" title="@item.Market">
                                    @{
                                        if (item.Market.Trim().Length > 23)
                                        {
                                            @(item.Market.Trim().Substring(0, 21) + "...")
                                        }
                                        else
                                        {
                                            @item.Market.Trim()
                                        }
                                    }
                                </div>
                            }
                            else
                            { 
                                <div class="margintop2" />
                            }                                      
                        }
                    </div>
                </div>
                <div class="viewsentiment" title="Sentiment">
                    <div class="sentimentLeftFloat sentiment-tag">
                        <div class="divSentimentMain sentimentFont">
                            <div class="divSentimentNeg">
                                <div style='width:@maxNegSentmtWidth'>
                                    @item.NegativeSentiment
                                </div>
                            </div>
                            <div class="divSentimentPos">
                                <div style='width:@maxPosSentmtWidth'>
                                    @item.PositiveSentiment
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="viewcontentdetail">
                    <div class="viewshortdetail">
                        @if (item.Audience > 0 && sessionInformation.IsNielsenData)
                        {
                            <div class="view" title="Local Audience @fLocalAudience">
                                @sLocalAudience
                            </div>
                        }
                        else
                        {
                            <div align="center" class="margintop2"></div>
                        }
                    </div>
                    <div class="viewshortdetail">
                        @if (item.IQAdsharevalue > 0 && sessionInformation.IsNielsenData)
                        {
                            <div class="price" title="Local Media Value @fLocalMediaValue">
                                @sLocalMediaValue @item.Nielsen_Result
                            </div>
                        }
                        else 
                        {
                            <div align="center" class="margintop2" />
                        }
                    </div>
                </div>
            </div>
            <div class="FeedsActionBarRightDiv minWidth52IE8">
                <div class="detailIcon">
                    <!--Padding Save Article-->
                    <div align="center" class="margintop2" />
                </div>
                <div class="detailIcon">
                    <!--Padding View Article-->
                    <div align="center" class="margintop2" />
                </div>
                <div class="detailIcon">
                    <!--Padding on the right-->
                    <div align="center" class="margintop2" />
                </div>
            </div>
        </div>
    </div>

                    break;                 
                case CommonFunctions.CategoryType.NM:
                    if (item.Audience.HasValue && item.Audience > 0)
                    {
                        fLocalAudience = string.Format("{0:N0}", item.Audience);

                        if (item.Audience >= Billion)
                        {
                            sLocalAudience = string.Format("{0:F1} bil", item.Audience / BillionD);
                        }
                        else if (item.Audience >= Million)
                        {
                            sLocalAudience = string.Format("{0:F1} mil", item.Audience / MillionD);
                        }
                        else
                        {
                            sLocalAudience = fLocalAudience;
                        }
                    }
                    else
                    {
                        sLocalAudience = "NA";
                    }

                    if (item.IQAdsharevalue.HasValue && item.IQAdsharevalue > 0)
                    {
                        fLocalMediaValue = string.Format("{0:N2}", item.IQAdsharevalue);

                        if (item.IQAdsharevalue >= BillionD)
                        {
                            sLocalMediaValue = string.Format("{0:F1} bil", item.IQAdsharevalue / BillionD);
                        }
                        else if (item.IQAdsharevalue >= MillionD)
                        {
                            sLocalMediaValue = string.Format("{0:F1} mil", item.IQAdsharevalue / MillionD);
                        }
                        else
                        {
                            sLocalMediaValue = fLocalMediaValue;
                        }
                    }
                    else
                    {
                        sLocalMediaValue = "NA";
                    }
                                                                 
    <div class="media displayNone">
        <div class="MediaDate">
            <div class="post-date">
                <span class="month">@Month</span>
                <div>
                    <span class="today">@Day</span>
                </div>
                <span class="timeWithTimeZone">@Time @sessionInformation.TimeZone</span>
            </div>
        </div>
        <div class="MediaTypeLogo" align="center">
            <img src="@String.Format(mediaIconFormat, "news.png")" title="@CommonFunctions.GetEnumDescription(CommonFunctions.CategoryType.NM)" alt="" />
        </div>
        <div class="pull-right">
            <input type="checkbox" id="ckhNM_@item.ArticleID" value="@item.ArticleID,NM" onclick="CheckUncheckMasterCheckBox(this,'divResult','chkInputAll');" />
        </div>
        <div class="FeedsContentNone">
            <div class="media-heading float-left">
                @if (item.IQLicense == 3) 
                {
                    <img src="@String.Format(mediaIconFormat, "LexisNexis_Small.png")" title="LexisNexis(R)" alt="LexisNexis(R)" class="lexisNexisImg" /> 
                }
                <a href="@(item.IQLicense > 0 ? Url.Action("Index", "Article", new { au = CommonFunctions.EncryptLicenseStringAES(sessionInformation.CustomerKey + "¶Discovery¶" + item.ArticleURL + "&u1=cliq40&u2=" + sessionInformation.ClientID + "¶" + item.IQLicense) }) : item.ArticleURL)" target="_blank" title="@item.Title.Trim()">
                    @title
                </a>
            </div>
            <div class="subheading float-left margintop1">
                @item.timeDifference
            </div>
            <div class="clear float-left media-body">
                @Html.Raw(body)
            </div>
        </div>
        <div class="clear post-divider" />
        <div class="clear margintop2 marginbottom2">
            <div class="FeedsActionBarLeftDiv">
                <div class="viewmore" style="min-height:1px">
                    <!--min-height needed to force expand div-->
                    <!--discovery model has no isRead or children-->
                </div>
                <div class="viewlocation">
                    <div class="">
                        @{
                            if (!string.IsNullOrWhiteSpace(publication))
                            {
                                <div class="location-tag" title="@item.Publication.Trim()">
                                    @publication
                                </div>
                            }
                            else
                            { 
                                <div class="margintop2" />
                            }                                      
                        }
                    </div>
                </div>
                <div class="viewsentiment" title="Sentiment">
                    <div class="sentimentLeftFloat sentiment-tag">
                        <div class="divSentimentMain sentimentFont">
                            <div class="divSentimentNeg">
                                <div style='width:@maxNegSentmtWidth'>
                                    @item.NegativeSentiment
                                </div>
                            </div>
                            <div class="divSentimentPos">
                                <div style='width:@maxPosSentmtWidth'>
                                    @item.PositiveSentiment
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @if (sessionInformation.IsCompeteData)
                {
                    <div class="viewcontentdetail">
                        <div class="viewshortdetail">
                            <div class="view" title="Local Audience @fLocalAudience">
                                @sLocalAudience
                                @if (!string.IsNullOrEmpty(item.CompeteImage))
                                {                   
                                    <img title="Powered by Compete" class="competeIcon" src="../Images/compete.png" alt="Compete Image" />
                                }
                                else
                                {
                                    <div align="center" class="margintop2" />
                                }
                            </div>
                        </div>
                        <div class="viewshortdetail">
                            <div class="price" title="Local Media Value @fLocalMediaValue">
                                @sLocalMediaValue
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="FeedsActionBarRightDiv minWidth52IE8">
                <div class="detailIcon">
                    <a class="cursorPointer saveMedia saveArticle" title="Save Article" onclick="ShowSaveArticleDiscovery('@item.ArticleID',this.id,'NM','@item.SearchTerm.Replace("\"", "\\\"").Replace("'", "\\'")');return false;" target="_blank" id="aSaveNM_@item.ArticleID" />
                </div>
                <div class="detailIcon">
                    <a class="cursorPointer viewArticle" title="View Article" href="@(item.IQLicense > 0 ? Url.Action("Index", "Article", new { au = CommonFunctions.EncryptLicenseStringAES(sessionInformation.CustomerKey + "¶Discovery¶" + item.ArticleURL + "&u1=cliq40&u2=" + sessionInformation.ClientID + "¶" + item.IQLicense) }) : item.ArticleURL)" target="_blank" />
                </div>
                <div class="detailIcon">
                <!--Padding on the right-->
                <div align="center" class="margintop2" />
                </div>
            </div>
        </div>
    </div>

                    break;
                case CommonFunctions.CategoryType.SocialMedia:
                
    <div class="media displayNone">
        <div class="MediaDate">
            <div class="post-date">
                <span class="month">@Month</span>
                <div>
                    <span class="today">@Day</span>
                </div>
                <span class="timeWithTimeZone">@Time @sessionInformation.TimeZone</span>
            </div>
        </div>
        <div class="MediaTypeLogo" align="center">
            <img src="@String.Format(mediaIconFormat, "25social.png")" title="@CommonFunctions.GetEnumDescription(CommonFunctions.CategoryType.SocialMedia)" />
        </div>
        <div class="float-right">
            <input type="checkbox" onclick="CheckUncheckMasterCheckBox(this,'divResult','chkInputAll');" value="@item.ArticleID,SM" id="ckhSM_@item.ArticleID" />
        </div>
        <div class="FeedsContentNone">
            <div class="float-left media-heading">
                <a target="_blank" href="@item.ArticleURL" title="@item.Title.Trim()">
                    @title
                </a>
            </div>
            <div class="subheading float-left margintop1">
                @item.timeDifference
            </div>
            <div class="clear float-left media-body">
                @Html.Raw(body)
            </div>
        </div>
        <div class="clear post-divider" />
        <div class="clear margintop2 marginbottom2">
            <div class="FeedsActionBarLeftDiv">
                <div class="viewmore" style="min-height:1px">
                    <!--min-height needed to force expand div-->
                    <!--discovery model has no isRead or children-->
                </div>
                <div class="viewlocation">
                    <div class="">
                        @if (!string.IsNullOrWhiteSpace(publication))
                        {
                            <div class="location-tag" title="@item.Publication.Trim()">
                                @publication
                            </div>   
                        }
                        else
                        { 
                            <div class="margintop2" />
                        }
                    </div>
                </div>
                <div class="viewsentiment" title="Sentiment">
                    <div class="sentimentLeftFloat sentiment-tag">
                        <div class="divSentimentMain sentimentFont">
                            <div class="divSentimentNeg">
                                <div style='width:@maxNegSentmtWidth'>
                                    @item.NegativeSentiment
                                </div>
                            </div>
                            <div class="divSentimentPos">
                                <div style='width:@maxPosSentmtWidth'>
                                    @item.PositiveSentiment
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="FeedsActionBarRightDiv minWidth52IE8">
                <div class="detailIcon">
                    <a class="cursorPointer saveMedia saveArticle" title="Save Article" onclick="ShowSaveArticleDiscovery(@item.ArticleID,this.id, 'SocialMedia', '@item.SearchTerm.Replace("\"", "\\\"").Replace("'", "\\'")');return false;" target="_blank" id="aSaveSM_@item.ArticleID" />
                </div>
                <div class="detailIcon">
                    <a class="cursorPointer viewArticle" title="View Article" href="@item.ArticleURL" target="_blank" />
                </div>
                <div class="detailIcon">
                    <!--Padding on the right-->
                    <div align="center" class="margintop2" />
                </div>
            </div>
        </div>
    </div>

                    break;
                case CommonFunctions.CategoryType.Forum:
                        
    <div class="media displayNone">
        <div class="MediaDate">
            <div class="post-date">
                <span class="month">@Month</span>
                <div>
                    <span class="today">@Day</span>
                </div>
                <span class="timeWithTimeZone">@Time @item.TimeZone</span>
            </div>
        </div>
        <div class="MediaTypeLogo" align="center">
            <img src="@String.Format(mediaIconFormat, "25forum.png")" title="@CommonFunctions.GetEnumDescription(CommonFunctions.CategoryType.Forum)" alt="" />
        </div>
        <div class="float-right">
            <input type="checkbox" id="ckhSM_@item.ArticleID" value="@item.ArticleID,SM"  onclick="CheckUncheckMasterCheckBox(this,'divResult','chkInputAll');" />
        </div>
        <div class="FeedsContentNone">
            <div class="float-left media-heading">
                <a target="_blank" href="@item.ArticleURL" title="@item.Title.Trim()">
                    @title
                </a>
            </div>
            <div class="subheading float-left margintop1">
                @item.timeDifference
            </div>
            <div class="clear float-left media-body">
                @Html.Raw(body)
            </div>
        </div>
        <div class="clear post-divider" />
        <div class="clear margintop2 marginbottom2">
            <div class="FeedsActionBarLeftDiv">
                <div class="viewmore" style="min-height:1px">
                    <!--min-height needed to force expand div-->
                    <!--discovery model has no isRead or children-->
                </div>
                <div class="viewlocation">
                    <div class="">
                        @if (!string.IsNullOrWhiteSpace(publication))
                        {
                            <div class="location-tag" title="@item.Publication.Trim()">
                                @publication
                            </div>   
                        }
                        else
                        { 
                            <div class="margintop2" />
                        }
                    </div>
                </div>
                <div class="viewsentiment" title="Sentiment">
                    <div class="sentimentLeftFloat sentiment-tag">
                        <div class="divSentimentMain sentimentFont">
                            <div class="divSentimentNeg">
                                <div style='width:@maxNegSentmtWidth'>
                                    @item.NegativeSentiment
                                </div>
                            </div>
                            <div class="divSentimentPos">
                                <div style='width:@maxPosSentmtWidth'>
                                    @item.PositiveSentiment
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="FeedsActionBarRightDiv minWidth52IE8">
                <div class="detailIcon">
                    <a class="cursorPointer saveMedia saveArticle" title="Save Article" onclick="ShowSaveArticleDiscovery(@item.ArticleID,this.id, 'Forum', '@item.SearchTerm.Replace("\"", "\\\"").Replace("'", "\\'")');return false;" target="_blank" id="aSaveForum_@item.ArticleID" />
                </div>
                <div class="detailIcon">
                    <a class="cursorPointer viewArticle" title="View Article" href="@item.ArticleURL" target="_blank" />
                </div>
                <div class="detailIcon">
                    <!--Padding on the right-->
                    <div align="center" class="margintop2" />
                </div>
            </div>
        </div>
    </div>

                    break;
                case CommonFunctions.CategoryType.Blog:
                
                    if (item.Audience.HasValue && item.Audience > 0)
                    {
                        fLocalAudience = string.Format("{0:N0}", item.Audience);

                        if (item.Audience >= Billion)
                        {
                            sLocalAudience = string.Format("{0:F1} bil", item.Audience / BillionD);
                        }
                        else if (item.Audience >= Million)
                        {
                            sLocalAudience = string.Format("{0:F1} mil", item.Audience / MillionD);
                        }
                        else
                        {
                            sLocalAudience = fLocalAudience;
                        }
                    }
                    else
                    {
                        sLocalAudience = "NA";
                    }

                    if (item.IQAdsharevalue.HasValue && item.IQAdsharevalue > 0)
                    {
                        fLocalMediaValue = string.Format("{0:N2}", item.IQAdsharevalue);

                        if (item.IQAdsharevalue >= BillionD)
                        {
                            sLocalMediaValue = string.Format("{0:F1} bil", item.IQAdsharevalue / BillionD);
                        }
                        else if (item.IQAdsharevalue >= MillionD)
                        {
                            sLocalMediaValue = string.Format("{0:F1} mil", item.IQAdsharevalue / MillionD);
                        }
                        else
                        {
                            sLocalMediaValue = fLocalMediaValue;
                        }
                    }
                    else
                    {
                        sLocalMediaValue = "NA";
                    }
                        
    <div class="media displayNone">
        <div class="MediaDate">
            <div class="post-date">
                <span class="month">@Month</span>
                <div>
                    <span class="today">@Day</span>
                </div>
                <span class="timeWithTimeZone">@Time @item.TimeZone</span>
            </div>
        </div>
        <div class="MediaTypeLogo" align="center">
            <img src="@String.Format(mediaIconFormat, "25blog.png")" title="@CommonFunctions.GetEnumDescription(CommonFunctions.CategoryType.Blog)" alt="" />
        </div>
        <div class="float-right">
            <input type="checkbox" id="ckhSM_@item.ArticleID" value="@item.ArticleID,SM"  onclick="CheckUncheckMasterCheckBox(this,'divResult','chkInputAll');" />
        </div>
        <div class="FeedsContentNone">
            <div class="float-left media-heading">
                <a target="_blank" href="@item.ArticleURL" title="@item.Title.Trim()">
                    @title
                </a>
            </div>
            <div class="subheading float-left margintop1">
                @item.timeDifference
            </div>
            <div class="clear float-left media-body">
                @Html.Raw(body)
            </div>
        </div>
        <div class="clear post-divider" />
        <div class="clear margintop2 marginbottom2">
            <div class="FeedsActionBarLeftDiv">
                <div class="viewmore" style="min-height:1px">
                    <!--min-height needed to force expand div-->
                    <!--discovery model has no isRead or children-->
                </div>
                <div class="viewlocation">
                    <div class="">
                        @if (!string.IsNullOrWhiteSpace(@uriPub))
                        {
                            <div class="location-tag" title="@uriPub">
                                @(uriPub.Trim().Length > 23 ? uriPub.Trim().Substring(0, 21) + "..." : uriPub.Trim())
                            </div>   
                        }
                        else
                        { 
                            <div class="margintop2" />
                        }
                    </div>
                </div>
                <div class="viewsentiment" title="Sentiment">
                    <div class="sentimentLeftFloat sentiment-tag">
                        <div class="divSentimentMain sentimentFont">
                            <div class="divSentimentNeg">
                                <div style='width:@maxNegSentmtWidth'>
                                    @item.NegativeSentiment
                                </div>
                            </div>
                            <div class="divSentimentPos">
                                <div style='width:@maxPosSentmtWidth'>
                                    @item.PositiveSentiment
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="viewcontentdetail">
                    @if (sessionInformation.IsCompeteData && item.Audience > 0)
                    {
                        <div class="viewshortdetail">
                            <div class="view" title="Local Audience @fLocalAudience">
                                @sLocalAudience
                                @if (!string.IsNullOrEmpty(item.CompeteImage))
                                {
                                    <img title="Powered by Compete" class="competeIcon" src="../Images/compete.png" alt="Compete Image" />
                                }
                            </div>
                        </div>
                        <div class="viewshortdetail">
                            <div class="price" title="Local Media Value @fLocalMediaValue">
                                @sLocalMediaValue
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="FeedsActionBarRightDiv minWidth52IE8">
                <div class="detailIcon">
                    <a class="cursorPointer saveMedia saveArticle" title="Save Article" onclick="ShowSaveArticleDiscovery(@item.ArticleID,this.id, 'Blog', '@item.SearchTerm.Replace("\"", "\\\"").Replace("'", "\\'")');return false;" target="_blank" id="aSaveBlog_@item.ArticleID" />
                </div>
                <div class="detailIcon">
                    <a class="cursorPointer viewArticle" title="View Article" href="@item.ArticleURL" target="_blank" />
                </div>
                <div class="detailIcon">
                    <!--Padding on the right-->
                    <div align="center" class="margintop2" />
                </div>
            </div>
        </div>
    </div>

                    break;
                case CommonFunctions.CategoryType.PQ:
                    string authors = !String.IsNullOrEmpty(item.ProQuestAuthors) ? "(" + item.ProQuestAuthors + ") " : String.Empty;
                    
    <div class="media displayNone">
        <div class="MediaDate">
            <div class="post-date">
                <span class="month">@Month</span>
                <div>
                    <span class="today">@Day</span>
                </div>
                <span class="timeWithTimeZone">&nbsp;</span>
            </div>
        </div>
        <div class="MediaTypeLogo" align="center">
            <img src="@String.Format(mediaIconFormat, "25x25_publicationText.png")" title="@CommonFunctions.GetEnumDescription(CommonFunctions.CategoryType.PQ)" />
        </div>
        <div class="pull-right">
            <input type="checkbox" onclick="CheckUncheckMasterCheckBox(this,'divResult','chkInputAll');" id="ckhPQ_@item.ArticleID" value="@item.ArticleID,PQ" />
        </div>
        <div class="FeedsContentNone">
            <div class="float-left media-heading">
                <a target="_blank" onclick="ShowViewArticleDiscovery('@item.ArticleID');return false;" class="cursorPointer" title="@item.Title.Trim()">
                    @title
                </a>
            </div>
            <div class="subheading float-left margintop1" >
                @item.timeDifference
            </div>
            <div class="clear float-left media-body">
                @Html.Raw(body)
            </div>
        </div>
        <div class="clear post-divider" />
        <div class="clear margintop2 marginbottom2">
            <div class="FeedsActionBarLeftDiv">
                <div class="viewmore" style="min-height:1px">
                    <!--min-height needed to force expand div-->
                    <!--discovery model has no isRead or children-->
                </div>
                <div class="viewlocation">
                    <div class="">
                        @if (!string.IsNullOrWhiteSpace(uriPub))
                        {
                            var Journal = uriPub.Trim() + authors.Trim();
                            
                            <div class="location-tag" title="@Journal">
                                @(Journal.Length > 23 ? Journal.Substring(0, 21) + "..." : Journal)
                            </div>
                        }
                        else
                        {
                            <div align="center" class="margintop2" />
                        }
                    </div>
                </div>
                <div class="viewsentiment" title="Sentiment">
                    <div class="sentimentLeftFloat sentiment-tag">
                        <div class="divSentimentMain sentimentFont">
                            <div class="divSentimentNeg">
                                <div style='width:@maxNegSentmtWidth'>
                                    @item.NegativeSentiment
                                </div>
                            </div>
                            <div class="divSentimentPos">
                                <div style='width:@maxPosSentmtWidth'>
                                    @item.PositiveSentiment
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="FeedsActionBarRightDiv minWidth52IE8">
                <div class="detailIcon">
                    <a class="cursorPointer saveMedia saveArticle" title="Save Article" onclick="ShowSaveArticleDiscovery('@item.ArticleID',this.id,'PQ','@item.SearchTerm.Replace("\"", "\\\"").Replace("'", "\\'")');return false;" target="_blank" id="aSavePQ_@item.ArticleID" />
                </div>
                <div class="detailIcon">
                    <a class="cursorPointer viewArticle" title="View Article" onclick="ShowViewArticleDiscovery('@item.ArticleID');return false;" target="_blank" />
                </div>
                <div class="detailIcon">
                    <!--Padding on the right-->
                    <div align="center" class="margintop2" />
                </div>
            </div>
        </div>
    </div>

                    break;
            }
        }
    }
    catch (Exception ex)
    {
        Log4NetLogger.Error("error parsing results ", ex);
        throw;
    }
}
