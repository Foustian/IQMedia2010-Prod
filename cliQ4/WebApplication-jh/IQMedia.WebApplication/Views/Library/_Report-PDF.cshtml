@using IQMedia.Model;
@model IQMedia.Model.IQArchive_DisplayLibraryReport
@{ 
    string BaseUrl = "https://" + Request.Url.Host + "/";
}
<!DOCTYPE html>
<html>
<head>
    <title>iQ media Report</title>@*<link rel="stylesheet" href="http://code.jquery.com/ui/1.10.2/themes/smoothness/jquery-ui.css" />*@
    <link href="../../Css/Fonts.css" rel="stylesheet" type="text/css" />
    <!--DASHBOARD_CSS_PH--> <!--Don't remove. Replaced with css files when report contains dashboard charts -->
    <style type="text/css">
       body {
				font-family: 'Open Sans';
				font-size: 14px;
				line-height: 20px;
			}
		h4 
		{
           font-size: 17.5px;
        }
        .mediatitlediv
        {
            line-height: 25px;
            background-color: #EAEAEA;
            font-weight: bold;
            font-size: 15px;
            border: 1px solid #A0A0A0;
            vertical-align: middle;
            padding-left: 10px;
        }
        .categorytitlediv
        {
            line-height: 25px;
            font-weight: bold;
            font-size: 14px;
            padding-bottom: 5px;
            border-bottom: 1px solid #A0A0A0;
        }
        .media 
        {
	    border-bottom:1px solid #cccccc;
	    padding:10px 0;
            }
        .pull-left {
          float: left;
        }
		
		.media .pull-left {
			margin-right: 10px;
		}
        .post-date {
	        background-color:#EEEEEE;	
	        color:#fff;
	        width:65px;
	        height:auto;
	        text-align:center;
        }
		.post-date div {
			background-color: white;
			margin-left: 5%;
			padding-bottom: 3px;
			padding-top: 3px;
			text-align: center;
			width: 90%;
			z-index: 10;
			}

        .post-date .month {
	        text-transform:uppercase;
	        display:block;
	        font-size:13px;
	        font-weight:bold;
	        padding:0px;
	        background:#666666;
        }

        .post-date .today {
	        font-size:22px;
	        font-weight:600;
	        display:block;
	        color:#2B2B2B;
        }
        .post-date .time {
            font-weight:bold;
	        font-size:11px;
	        color:#2B2B2B;
	        display:block;
        }
        .post-date .timeWithTimeZone
        {
            font-size:9px;
	        color:#2B2B2B;
	        display:block;
        }
        .network {
	        margin:10px 0 3px 0px;
        }
        .media-body {
	        padding-right:6px;
	        font-size:13px;
	        font-family: 'Merriweather';
        }

        .maxWidth69p
        {
            max-width:69%;
        }
        .media-heading {
	        font-family: 'Open Sans';	
	        font-weight:600;
	        margin-right:10px;
			margin-top:0px;
			margin-bottom:5px;
        }
		 .media-heading a
        {
            color:#333333;
			font-weight: 600;
			text-decoration:none;
        }
        .clearfix {
          *zoom: 1;
        }
        .pull-right {
          float: right;
        }
        .video-thumb {
	        width:150px;
        }
        .width130
        {
            width: 130px;
        }
        .positionRelative
        {
            position: relative;
        }
        .maxwidth130
        {
            max-width:130px;
        }
        .clear
        {
            clear:both;
            overflow:hidden;
        }
        .TVvideo-tags {
	        float:left;
	        margin-top:5px;
        }
        .margintop0
        {
            margin-top:0px;
        }
        .marginright35
        {
            margin-right:35px !important;
        }
        .marginleft62
        {
            margin-left:62px;
        }
        .view {
	        background:url(@(BaseUrl + "images/view.png")) no-repeat left 2px;
	        padding-left:20px;
	        float:left;
        }

        .price {
	        background:url(@(BaseUrl + "images/dollar.png")) no-repeat left 2px;
	        padding-left:20px;
        }
        .marginright35
        {
            margin-right:35px !important;
        }
        .minWidth52IE8
        {
            min-width:52px\9;
        }
        .margintop-3
        {
            margin-top:-3px;
        }
        .TweetBodyDivIQP
        {
            width:79%;
            vertical-align: top;
        }
        .borderBoxSizing
        {
            box-sizing: border-box;
            -moz-box-sizing: border-box;
            -webkit-box-sizing: border-box;
        }
        .TweetActorDisplayName
        {
            font-size:14px;    
            max-width:45%;    
        }

        .TweetSubdivFont
        {
            font-size: 11px; color: #999999;
        }

        .PaddingTopBottom1p
        {
            padding: 1% 0%;
        }
        .borderWidth0
        {
            border-width: 0px;
        }
        .borderdiv
        {
            background-color : #F4F4F4;
        }
        .marginRight0
        {
            margin-right: 0px;
        }
        .margintop-3
        {
            margin-top:-3px;
        }
        .maxWidth85
        {
            max-width:85%;
        }
       
        .newsMediadiv{
	        margin-top:5px;
        }
        .video-tags {
	        float:left;
	     }
        .marginleft25
        {
            margin-left:25px;
        }
        .divSentimentNegPDF
        {
            -moz-box-sizing: border-box;
            border-right: 1px solid #FFFFFF;
            float: left !important;
            padding: 0 !important;
            width: 26px;
        }
        .divSentimentNegPDF div
        {
            background-color: #d8635d;
            color: #FFFFFF;
            float: right !important;
            line-height: 15px;
            overflow: hidden;
            padding: 0 !important;
        }
        .PositiveSentiment
        {
            color: #c7d36a;
            font-size: 11px;
            line-height: 15px;
        }
        .NegativeSentiment
        {
            color: #d8635d;
            font-size: 11px;
            line-height: 15px;
        }
        .divSentimentMain
        {
            background-color: #DEDEDE;
            color: #FFFFFF;
            float: right;
            height: 15px;
            margin-left: 3px;
            padding: 0 !important;
            text-align: center;
            width: 52px;
        }
        .divSentimentPosPDF
        {
            float: right !important;
            padding: 0 !important;
            width: 25px;
        }
        .divSentimentPosPDF div
        {
            background-color: #c7d36a;
            color: #FFFFFF;
            float: left !important;
            line-height: 15px;
            overflow: hidden;
            padding: 0 !important;
        }
        .tvFeedsMarket
        {
            width:4%;
        }

        .tmStationDiv
        {
            display:table-cell;word-wrap:break-word;word-break:break-all;font-size:13px;
        }
        .width83p
        {
            width:83%;
        }
        .maxWidth48
        {
            max-width:48px;
        }
        .totalview 
        {
            background:url(@(BaseUrl + "images/us-map.png")) no-repeat left 2px;
	        padding-left:32px;
	        float:left;
        }

        .totalprice {
	        background:url(@(BaseUrl + "images/us-dollar.png")) no-repeat left 2px;
	        /*float:right;*/
	        padding-left:32px;
        }

        .float-left
        {
            float:left;    
        }

        .float-right
        {
         float:right;   
        }

        .margintop2 
        {
            margin-top:2px;
        }
        .actionBarsection {
           margin-bottom: 3px !important;
            margin-top: 3px !important;
        }
        .following
        {
            background:url(@(BaseUrl + "images/following.png")) no-repeat 0px 3px;
            padding:2px 0 0 24px;
        }

        .followers
        {
            background:url(@(BaseUrl + "images/followers.png")) no-repeat 0px 3px;
            padding:2px 0 0 26px;
        }

        .klout
        {
            background:url(@(BaseUrl + "images/klout.png")) no-repeat 0px 3px;
            padding:2px 0 0 27px;
        }

        .keepTogether
        {
            page-break-inside:avoid;
        }

        .likes {
	        background:url(../images/fb-like.png) no-repeat left 2px;
	        padding-left:20px;
        }

        .shares {
	        background:url(../images/fb-share.png) no-repeat left 2px;
	        padding-left:20px;
        }

        .comments {
	        background:url(../images/fb-comment.png) no-repeat left 2px;
	        padding-left:20px;
        }

        .media-heading-fb .verified
        {
	        background:url(../images/blue-check.png) no-repeat left 0px;
	        padding-left:20px;
	        margin-left:3px;
        }

        .media-heading-fb .arrow
        {
	        background:url(../images/arrow-plain.png) no-repeat left 5px;
	        padding-left:15px;
	        margin-left:5px;
        }



    </style>
</head>
<body>
    <div style="padding: 10px 20px 10px 3px;">
        @if (Model != null && Model.ReportDetails != null && Model.ArchiveResults != null)
        {








            SessionInformation sessionInformation = IQMedia.WebApplication.Utility.CommonFunctions.GetSessionInformation();
            string Logo = System.Configuration.ConfigurationManager.AppSettings["UrlReportHeader"];
            Logo += sessionInformation.ClientGUID + "/" + Model.ReportDetails._ReportImage;

            List<IQArchive_ArchiveClipModel> lstIQArchive_ArchiveClipModel = (List<IQArchive_ArchiveClipModel>)Model.ArchiveResults.Where(w => string.Compare(w.MediaType, "TV", true) == 0).Select(s => new IQArchive_ArchiveClipModel()
            {
                ClipID = s.MediaData.ClipID,
                ClosedCaption = s.MediaData.ClosedCaption,
                IQAdShareValue = s.MediaData.IQAdShareValue == null ? 0 : s.MediaData.IQAdShareValue,
                Market = s.MediaData.Market,
                Nielsen_Audience = s.MediaData.Nielsen_Audience == null ? 0 : s.MediaData.Nielsen_Audience,
                Nielsen_Result = s.MediaData.Nielsen_Result,
                StationLogo = s.MediaData.StationLogo,
                National_Nielsen_Audience = s.MediaData.National_Nielsen_Audience,
                National_IQAdShareValue = s.MediaData.National_IQAdShareValue
            }).ToList();

            List<IQArchive_ArchiveNMModel> lstIQArchive_ArchiveNMModel = (List<IQArchive_ArchiveNMModel>)Model.ArchiveResults.Where(w => string.Compare(w.MediaType, "NM", true) == 0).Select(s => new IQArchive_ArchiveNMModel()
            {
                Compete_Audience = s.MediaData.Compete_Audience == null ? 0 : s.MediaData.Compete_Audience,
                Compete_Result = s.MediaData.Compete_Result,
                IQAdShareValue = s.MediaData.IQAdShareValue == null ? 0 : s.MediaData.IQAdShareValue,
                Publication = s.MediaData.Publication,
                Url = s.MediaData.Url
            }).ToList();

            List<IQArchive_ArchiveSMModel> lstIQArchive_ArchiveSMModel = (List<IQArchive_ArchiveSMModel>)Model.ArchiveResults.Where(w => string.Compare(w.SubMediaType.ToString(), "Blog", true) == 0).Select(s => new IQArchive_ArchiveSMModel()
            {
                Compete_Audience = s.MediaData.Compete_Audience == null ? 0 : s.MediaData.Compete_Audience,
                Compete_Result = s.MediaData.Compete_Result,
                IQAdShareValue = s.MediaData.IQAdShareValue == null ? 0 : s.MediaData.IQAdShareValue,
                Publication = s.MediaData.Publication,
                Url = s.MediaData.Url
            }).ToList();

            List<IQArchive_ArchiveTweetsModel> lstIQArchive_ArchiveTweetsModel = (List<IQArchive_ArchiveTweetsModel>)Model.ArchiveResults.Where(w => string.Compare(w.MediaType, "TW", true) == 0).Select(s => new IQArchive_ArchiveTweetsModel()
            {
                ActorDisplayname = s.MediaData.ActorDisplayname,
                ActorImage = s.MediaData.ActorImage,
                FollowersCount = s.MediaData.FollowersCount,
                FreiendsCount = s.MediaData.FreiendsCount,
                KloutScore = s.MediaData.KloutScore,
                PreferredUserName = s.MediaData.PreferredUserName
            }).ToList();

            List<IQArchive_ArchiveBLPMModel> lstIQArchive_ArchiveBLPMModel = (List<IQArchive_ArchiveBLPMModel>)Model.ArchiveResults.Where(w => string.Compare(w.MediaType, "PM", true) == 0).Select(s => new IQArchive_ArchiveBLPMModel()
            {
                Circulation = s.MediaData.Circulation
            }).ToList();

            long TVNationalAudience = lstIQArchive_ArchiveClipModel.Sum(sm => sm.National_Nielsen_Audience.HasValue && sm.National_Nielsen_Audience > 0 ? Convert.ToInt64(sm.National_Nielsen_Audience.Value) : 0);
            long TVAudience = lstIQArchive_ArchiveClipModel.Sum(sm => Convert.ToInt64(sm.Nielsen_Audience.Value));
            long NMAudience = lstIQArchive_ArchiveNMModel.Sum(sm => Convert.ToInt64(sm.Compete_Audience.Value));
            long SMAudience = lstIQArchive_ArchiveSMModel.Sum(sm => Convert.ToInt64(sm.Compete_Audience.Value));
            long TWAudience = lstIQArchive_ArchiveTweetsModel.Sum(sm => Convert.ToInt64(sm.FollowersCount));
            long PMAudience = lstIQArchive_ArchiveBLPMModel.Sum(sm => Convert.ToInt64(sm.Circulation));

            decimal TVNationalValue = lstIQArchive_ArchiveClipModel.Sum(sm => sm.National_IQAdShareValue.HasValue && sm.National_IQAdShareValue > 0 ? sm.National_IQAdShareValue.Value : 0);
            decimal TVValue = lstIQArchive_ArchiveClipModel.Sum(sm => sm.IQAdShareValue.Value);
            decimal NMValue = lstIQArchive_ArchiveNMModel.Sum(sm => sm.IQAdShareValue.Value);
            decimal SMValue = lstIQArchive_ArchiveSMModel.Sum(sm => sm.IQAdShareValue.Value);


            Int64 totalAudience = (TVAudience < 0 || !sessionInformation.IsNielsenData ? 0 : TVAudience) +
                (NMAudience < 0 || !sessionInformation.IsCompeteData ? 0 : NMAudience) +
                (SMAudience < 0 || !sessionInformation.IsCompeteData ? 0 : SMAudience) +
                (TWAudience < 0 ? 0 : TWAudience) +
                (PMAudience < 0 ? 0 : PMAudience);


            decimal totalMediaValue = (TVValue < 0 || !sessionInformation.IsNielsenData ? 0 : TVValue) +
                (NMValue < 0 || !sessionInformation.IsCompeteData ? 0 : NMValue) +
                    (SMValue < 0 || !sessionInformation.IsCompeteData ? 0 : SMValue);
            
            <!-- Generate Logo -->
   
            <div id="divLogo" style="float: left; width: 100%">
                @if (!string.IsNullOrEmpty(Model.ReportDetails._ReportImage))
                {
                    <img src="@Logo" alt="logo" />
                }
                else
                {
                    <img src="@(BaseUrl + "images/logo_N.png")" alt="iq logo" />
                }
            </div>
            <div style="clear: left; float: right; padding-top: 15px;">
                @if (Model.ReportDetails.Settings.ShowTotalNationalAudience)
                {
                    <div>
                        Total National Audience :
                        @string.Format("{0:N0}", TVNationalAudience)
                    </div>
                }
                @if (Model.ReportDetails.Settings.ShowTotalNationalMediaValue)
                {
                    <div>
                        National Media Value : $ @string.Format("{0:N2}", TVNationalValue)
                    </div>
                }
                @if (Model.ReportDetails.Settings.ShowTotalAudience)
                {
                    <div>
                        Total Audience :
                        @string.Format("{0:N0}", totalAudience)
                    </div>
                }
                @if (Model.ReportDetails.Settings.ShowTotalMediaValue)
                {
                    <div>
                        Media Value : $ @string.Format("{0:N2}", totalMediaValue)
                    </div>
                }
            </div>
            <!-- Report Title -->
    
            <div id="divReportTitle" style="padding-top: 15px; padding-bottom: 15px; clear: both;">
                <h4>@Model.ReportDetails.Title</h4>
            </div>
            
            <div id="divOverview"></div>
            <div id="divTV"></div>
            <div id="divNM"></div>
            <div id="divBlog"></div>
            <div id="divForum"></div>
            <div id="divSocialMedia"></div>
            <div id="divTW"></div>
            <div id="divPM"></div>
            <div id="divMS"></div>
    
            <!-- Primary group summary -->
    
            if (Model.ReportDetails.Settings.ShowCoverageSources)
            {
            <div id="divSourceSummary" style="padding: 15px 0px 15px 25px; clear:both;">
                @foreach (KeyValuePair<string, int> kvp in Model.GroupTier1Counts)
                {
                    if (kvp.Value > 0)
                    {
                        <div>
                            <span>@kvp.Key</span>
                            <span>-</span> <span>@kvp.Value
                            </span>
                        </div>
                    }
                }
            </div>
            }
    
            <!-- Generate media items for primary and secondary groups -->


            foreach (IQArchive_GroupTier1Model groupTier1 in Model.GroupTier1Results)
            {
                if (Model.GroupTier1Counts[groupTier1.GroupName] > 0)
                {
                <div class="mediatitlediv keepTogether">@groupTier1.GroupName</div>
            
            <div style="padding: 5px 0px 0px 0px;">
                @if (Model.ReportDetails.Settings.ShowAudience)
                {
                    <div style="float: right;" class="keepTogether">
                        Audience: @groupTier1.TotalAudience.ToString("N0")</div>
                }
                @if (Model.ReportDetails.Settings.ShowMediaValue)
                {
                    <div style="clear: both; float: right;" class="keepTogether">
                        Media Value: $ @groupTier1.TotalMediaValue.ToString("N2")</div>
                }
            </div>

            <div style="clear:both;padding-top:15px;"></div>
        
                if (groupTier1.GroupTier2Counts != null && groupTier1.GroupTier2Counts.Count > 0)
                { 
                <div style="padding-bottom: 15px; padding-left: 25px;">
                    @foreach (KeyValuePair<string, int> kvp in groupTier1.GroupTier2Counts)
                    {
                        if (kvp.Value > 0)
                        {
                            <div>
                                <span>@kvp.Key</span> <span>-</span> <span>@kvp.Value
                                </span>
                            </div>
                        }
                    }
                </div>
                }

                    foreach (IQArchive_GroupTier2Model groupTier2 in groupTier1.GroupTier2Results)
                    {
                        if (groupTier2.ArchiveResults.Count > 0)
                        {
                            if (groupTier2.IsEnabled)
                            {
                            <div class="categorytitlediv keepTogether">@groupTier2.GroupName</div>
                            }

                            foreach (IQMedia.Model.IQArchive_MediaModel item in groupTier2.ArchiveResults)
                            {
                                string Month = item.MediaDate != null ? item.MediaDate.ToString("MMM", System.Globalization.CultureInfo.InvariantCulture) : string.Empty;
                                string Day = item.MediaDate != null ? item.MediaDate.Day.ToString() : string.Empty;
                                string Time = item.MediaDate != null ? item.MediaDate.ToString("hh:mm tt") : string.Empty;

                                switch (item.SubMediaType)
                                {
                                    case IQMedia.Shared.Utility.CommonFunctions.CategoryType.TV:

                                        IQArchive_ArchiveClipModel TVModel = item.MediaData as IQArchive_ArchiveClipModel;

                                        string TVThumbUrl = Convert.ToString(System.Configuration.ConfigurationManager.AppSettings["IQArchieve_TVThumbUrl"]);
                                        TVThumbUrl += TVModel.ClipID;

                                        Month = TVModel.LocalDateTime != null ? TVModel.LocalDateTime.ToString("MMM", System.Globalization.CultureInfo.InvariantCulture) : string.Empty;
                                        Day = TVModel.LocalDateTime != null ? TVModel.LocalDateTime.Day.ToString() : string.Empty;
                                        Time = TVModel.LocalDateTime != null ? TVModel.LocalDateTime.ToString("hh:mm tt") : string.Empty;
                
            <div id="divMedia_@item.ID" class="media keepTogether">
                <div class="pull-left">
                    <div>
                        <div class="post-date">
                            <span class="month">@Month</span><div>
                                <span class="today">@Day</span></div>
                            <span class="timeWithTimeZone">@Time @TVModel.TimeZone</span></div>
                        <div align="center" class="network">
                            <img src="@(BaseUrl + "images/MediaIcon/network-icon.png")" alt="@IQMedia.Shared.Utility.CommonFunctions.GetEnumDescription(IQMedia.Shared.Utility.CommonFunctions.CategoryType.TV)" /></div>
                    </div>
                </div>
                <div class="pull-left">
                    <div style="float: left">
                        <div class="minHeight32">
                            <img alt="" src="@TVModel.StationLogo" /></div>
                    </div>
                </div>
                <div>
                    <div class="pull-left media-body maxWidth69p">
                        <span class="media-heading">@item.Title</span>
                        <div class="clearfix">
                        </div>
                        @if (!string.IsNullOrWhiteSpace(TVModel.Market))
                        {
                            <span style="color: #73797F;">@TVModel.Market - </span>
                        }
                        @Html.Raw(item.DisplayText)
                    </div>
                    <div class="pull-right">
                        <div class="pull-left video-thumb width130">
                            <div class="positionRelative">
                                <a href="@(BaseUrl + "ClipPlayer/?ClipID=" + TVModel.ClipID)" style="width:130px;height:100%;display:block;">
                                    <img width="130" height="auto" style="width: 130px;height:auto;" src="@TVThumbUrl" alt="clip"/>
                                </a>
                            </div>
                        </div>
                        <div class="pull-right">
                        </div>
                    </div>
                    <div class="clear borderdiv">
                        <div class="pull-left marginleft62 marginRight0">
                            @if (Model.ReportDetails.Settings.ShowSentiment)
                            {
                                <div id="divSentimentTV_@item.ID" class="margintop2 lineHeight15 pull-left marginright35">
                                    <div class="float-right sentimentLeftFloat actionBarsection">
                                        <div class="float-left">
                                            <img src="@(BaseUrl + "Images/thumbs-up.png")" width="13" alt="" style="margin-bottom:4px;margin-right:1px" /><img src="@(BaseUrl + "Images/thumbs-down.png")" style="margin-top:3px;" width="13" alt="" />&nbsp;
                                        </div>
                                        <div class="divSentimentMain sentimentFont">
                                            <div class="divSentimentMain">
                                                <div class="divSentimentNegPDF">
                                                    <div style='width:@((TVModel.NegativeSentiment * 6) > 25 ? 25 : (TVModel.NegativeSentiment * 6))px;'>@TVModel.NegativeSentiment</div>
                                                </div>
                                                <div class="divSentimentPosPDF">
                                                    <div style='width:@((TVModel.PositiveSentiment * 6) > 25 ? 25 : (TVModel.PositiveSentiment * 6))px;'>@TVModel.PositiveSentiment</div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            @if (TVModel.Nielsen_Audience > 0 && TVModel.IQAdShareValue > 0 && sessionInformation.IsNielsenData)
                            {
                                if (Model.ReportDetails.Settings.ShowAudience)
                                {
                                <div class="TVvideo-tags margintop0 marginright35">
                                    <div class="view" title="Audience">
                                        @( TVModel.Nielsen_Audience.HasValue ? string.Format("{0:n0}", TVModel.Nielsen_Audience) : string.Empty)
                                    </div>
                                </div>
                                }
                                if (Model.ReportDetails.Settings.ShowMediaValue)
                                {
                                <div class="TVvideo-tags margintop0  marginright35">
                                    <div class="price">
                                        @(string.Format("{0:n2}", TVModel.IQAdShareValue))
                                        @( (TVModel.IQAdShareValue.HasValue ? (!string.IsNullOrWhiteSpace(TVModel.Nielsen_Result) ? "(" + TVModel.Nielsen_Result.ToUpper() + ")" : string.Empty) : string.Empty))
                                    </div>
                                </div>
                                }
                            }
                            @if (Model.ReportDetails.Settings.ShowNationalValues && sessionInformation.IsNielsenData)
                            {
                                if (TVModel.National_Nielsen_Audience.HasValue)
                                {
                                <div class="TVvideo-tags margintop0  marginright35">
                                    <div class="totalview" title="Audience">
                                        @(TVModel.National_Nielsen_Audience.HasValue && TVModel.National_Nielsen_Audience > 0 ? string.Format("{0:n0}", TVModel.National_Nielsen_Audience) : string.Empty)
                                    </div>
                                </div>
                                }
                                if (TVModel.National_IQAdShareValue.HasValue)
                                {
                                <div class="TVvideo-tags margintop0  marginright35">
                                    <div class="totalprice">
                                        @(TVModel.National_IQAdShareValue.HasValue && TVModel.National_IQAdShareValue > 0 ? string.Format("{0:n2}", TVModel.National_IQAdShareValue) : string.Empty)
                                        @(TVModel.National_IQAdShareValue.HasValue && TVModel.National_IQAdShareValue > 0 ? (!string.IsNullOrWhiteSpace(TVModel.National_Nielsen_Result) ? "(" + TVModel.National_Nielsen_Result.ToUpper() + ")" : string.Empty) : string.Empty)
                                    </div>
                                </div>
                                }
                            }
                        </div>
                        <div class="marginright35 pull-right minWidth52IE8">
                            <div class="margintop-3">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
                            break;

                                    case IQMedia.Shared.Utility.CommonFunctions.CategoryType.TW:
                            IQArchive_ArchiveTweetsModel twitterModel = item.MediaData as IQArchive_ArchiveTweetsModel;
                        
            <div id="divMedia_@item.ID" class="media keepTogether">
                <div class="pull-left">
                    <div class="post-date">
                        <span class="month">@Month</span><div>
                            <span class="today">@Day</span></div>
                        <span class="timeWithTimeZone">@Time @sessionInformation.TimeZone</span></div>
                    <div align="center" class="network">
                        <img src="@(BaseUrl + "images/MediaIcon/twitter.png")" alt="@IQMedia.Shared.Utility.CommonFunctions.GetEnumDescription(IQMedia.Shared.Utility.CommonFunctions.CategoryType.TW)" />
                    </div>
                </div>
                <div class="pull-left TweetBodyDivIQP borderBoxSizing">
                    <div class="pull-left TweetActorDisplayName">
                        @{
                                                                               string actorlink = string.Empty;
                                                                               if (IQMedia.Shared.Utility.CommonFunctions.Validate_url(twitterModel.ActorLink + "/status/" + twitterModel.TweetID))
                                                                               {
                                                                                   actorlink = twitterModel.ActorLink + "/status/" + twitterModel.TweetID;
                                                                               }
                        }
                        <a id="aActorLink_@item.ID" target="_blank" href="@actorlink"><span id="lblDisplayName_@item.ID">@twitterModel.ActorDisplayname</span>
                        </a>&nbsp;<span class="TweetSubdivFont">@@</span><span id="lblPrefferedUserName_@item.ID" class="TweetSubdivFont">@twitterModel.PreferredUserName</span><br />
                    </div>
                    <div class="clear PaddingTopBottom1p TweetBodyText">
                        <div class="">
                            <span id="lblTweetBody_@item.ID">@Html.Raw(item.DisplayText)</span>
                        </div>
                    </div>
                </div>
                <div class="pull-right">
                </div>
                <div class="pull-left">
                    @if (IQMedia.Shared.Utility.CommonFunctions.Validate_url(twitterModel.ActorImage))
                    {
                        <img id="imgActor_@item.ID" src="@twitterModel.ActorImage" alt="actor image" class="borderWidth0  maxWidth48" /><br />
                    }
                </div>
                <div class="clear borderdiv">
                    <div class="pull-left marginleft62 marginRight0">
                        @if (Model.ReportDetails.Settings.ShowSentiment)
                        {
                            <div id="divSentimentTV_@item.ID" class="margintop2 lineHeight15 pull-left marginright35">
                                <div class="float-right sentimentLeftFloat actionBarsection">
                                    <div class="float-left">
                                        <img src="@(BaseUrl + "Images/thumbs-up.png")" width="13" alt="" style="margin-bottom:4px;margin-right:1px" /><img src="@(BaseUrl + "Images/thumbs-down.png")" style="margin-top:3px;" width="13" alt="" />&nbsp;
                                    </div>
                                    <div class="divSentimentMain sentimentFont">
                                        <div class="divSentimentMain">
                                            <div class="divSentimentNegPDF">
                                                <div style='width:@((twitterModel.NegativeSentiment * 6) > 25 ? 25 : (twitterModel.NegativeSentiment * 6))px;'>@twitterModel.NegativeSentiment</div>
                                            </div>
                                            <div class="divSentimentPosPDF">
                                                <div style='width:@((twitterModel.PositiveSentiment * 6) > 25 ? 25 : (twitterModel.PositiveSentiment * 6))px;'>@twitterModel.PositiveSentiment</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        <div class="pull-left marginright35 actionBarsection">
                            <div class="klout" title="Klout Score">@( string.Format("{0:n0}", twitterModel.KloutScore))</div>
                        </div>
                        @if (Model.ReportDetails.Settings.ShowAudience)
                        {
                            <div class="pull-left marginright35 actionBarsection">
                                <div class="followers" title="Followers">@( string.Format("{0:n0}", twitterModel.FollowersCount))</div>
                            </div>
                        }
                        <div class="pull-left marginright35 actionBarsection">
                            <div class="following" title="Following">@( string.Format("{0:n0}", twitterModel.FreiendsCount))</div>
                        </div>
                    </div>
                    <div class="pull-right marginright35 margintop-3">
                    </div>
                </div>
            </div>
                                                                 break;


                                    case IQMedia.Shared.Utility.CommonFunctions.CategoryType.NM:

                                                                 IQArchive_ArchiveNMModel newsMediaModel = item.MediaData as IQArchive_ArchiveNMModel;
                        
            <div id="divMedia_@item.ID" class="media keepTogether">
                <div class="pull-left">
                    <div class="post-date">
                        <span class="month">@Month</span><div>
                            <span class="today">@Day</span></div>
                        <span class="timeWithTimeZone">@Time @sessionInformation.TimeZone</span></div>
                    <div align="center" class="network">
                        <img src="@(BaseUrl + "images/MediaIcon/News.png")" alt="@IQMedia.Shared.Utility.CommonFunctions.GetEnumDescription(IQMedia.Shared.Utility.CommonFunctions.CategoryType.NM)" /></div>
                </div>
                <div class="pull-left maxWidth85">
                    <div>
                        <span class="media-heading">
                        @if (newsMediaModel.IQLicense == 3)
                        {
                            <img src="@(BaseUrl + "images/MediaIcon/LexisNexis_Small.png")" title="LexisNexis(R)" alt="LexisNexis(R)" class="lexisNexisImg" />
                        }    
                        <a href="@(newsMediaModel.IQLicense > 0 ? "http://" + Request.ServerVariables["HTTP_HOST"] + Url.Action("Index", "Article", new { au = IQMedia.Shared.Utility.CommonFunctions.EncryptLicenseStringAES(sessionInformation.CustomerKey + "¶Library PDF¶" + newsMediaModel.Url + "&u1=cliq40&u2=" + sessionInformation.ClientID + "¶" + newsMediaModel.IQLicense) }) : newsMediaModel.Url)"
                            target="_blank">@Html.Raw(item.Title)</a></span>
                    </div>
                    <div class="newsMediadiv">
                        @if (!string.IsNullOrWhiteSpace(newsMediaModel.Publication))
                        {
                            <span style="color: #73797F;">@newsMediaModel.Publication - </span>
                        }@Html.Raw(item.DisplayText)
                    </div>
                </div>
                <div class="pull-right">
                </div>
                <div class="clear borderdiv">
                    <div class="marginleft62 pull-left marginright35">
                        @if (Model.ReportDetails.Settings.ShowSentiment)
                        {
                            <div id="divSentimentTV_@item.ID" class="margintop2 lineHeight15 pull-left marginright35">
                                <div class="float-right sentimentLeftFloat actionBarsection">
                                    <div class="float-left">
                                        <img src="@(BaseUrl + "Images/thumbs-up.png")" width="13" alt="" style="margin-bottom:4px;margin-right:1px" /><img src="@(BaseUrl + "Images/thumbs-down.png")" style="margin-top:3px;" width="13" alt="" />&nbsp;
                                    </div>
                                    <div class="divSentimentMain sentimentFont">
                                        <div class="divSentimentMain">
                                            <div class="divSentimentNegPDF">
                                                <div style='width:@((newsMediaModel.NegativeSentiment * 6) > 25 ? 25 : (newsMediaModel.NegativeSentiment * 6))px;'>@newsMediaModel.NegativeSentiment</div>
                                            </div>
                                            <div class="divSentimentPosPDF">
                                                <div style='width:@((newsMediaModel.PositiveSentiment * 6) > 25 ? 25 : (newsMediaModel.PositiveSentiment * 6))px;'>@newsMediaModel.PositiveSentiment</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        @if (Decimal.Compare(Convert.ToDecimal(newsMediaModel.IQAdShareValue), -1M) != 0 && newsMediaModel.Compete_Audience != -1 && sessionInformation.IsCompeteData)
                        {
                            if (Model.ReportDetails.Settings.ShowAudience)
                            {
                            <div class="video-tags margintop0 marginright35">
                                <div class="view" title="Audience">
                                    @if (newsMediaModel.Compete_Audience.HasValue)
                                    {
                                        @(string.Format("{0:n0}", newsMediaModel.Compete_Audience))
                                                       
                                    }
                                    else
                                    {
                                        @("NA")
                                    }
                                    @if (!string.IsNullOrWhiteSpace(newsMediaModel.Compete_Result) && newsMediaModel.Compete_Result.ToUpper() == "A")
                                    {
                                        <img title="Powered by Compete" style="width: 14px" src="@(BaseUrl + "Images/compete.png")" alt="Compete Image" />
                                    }
                                </div>
                            </div>
                            }
                            if (Model.ReportDetails.Settings.ShowMediaValue)
                            {               
                            <div class="video-tags margintop0">
                                <div class="price">
                                    @if (newsMediaModel.IQAdShareValue.HasValue)
                                    {
                                        @(string.Format("{0:n2}", newsMediaModel.IQAdShareValue))
                                    }
                                    else
                                    {
                                        @("NA")
                                    }
                                </div>
                            </div>
                            }
                        }
                    </div>
                    <div class="marginright35 pull-right minWidth52IE8">
                        <div class="margintop-3">
                        </div>
                    </div>
                </div>
            </div>
                          
                        break;


                                    case IQMedia.Shared.Utility.CommonFunctions.CategoryType.PM:

                        IQArchive_ArchiveBLPMModel PMModel = item.MediaData as IQArchive_ArchiveBLPMModel;
                        string PMBasePath = Convert.ToString(System.Configuration.ConfigurationManager.AppSettings["IQArchieve_PMBaseUrl"]);
                        
            <div id="divMedia_@item.ID" class="media keepTogether">
                <div class="pull-left">
                    <div class="post-date">
                        <span class="month">@Month</span><div>
                            <span class="today">@Day</span></div>
                        <span class="timeWithTimeZone">@Time @sessionInformation.TimeZone</span></div>
                    <div align="center" class="network">
                        <img src="@(BaseUrl + "images/MediaIcon/print-media.png")" alt="@IQMedia.Shared.Utility.CommonFunctions.GetEnumDescription(IQMedia.Shared.Utility.CommonFunctions.CategoryType.PM)"></div>
                </div>
                <div class="pull-left maxWidth85">
                    <div>
                        <span class="media-heading"><a href="@(PMBasePath + PMModel.FileLocation.Replace(@"\", @"/"))"
                                                target="_blank">@Html.Raw(item.Title)</a></span>
                    </div>
                    <div class="newsMediadiv">
                        <div class="clearfix">
                        </div>
                        @if (!string.IsNullOrWhiteSpace(@PMModel.Pub_Name))
                        {
                            <span style="color: #73797F;" class="trimtext">@PMModel.Pub_Name - </span>
                        }
                        @Html.Raw(item.DisplayText)
                    </div>
                </div>
                <div class="pull-right">
                </div>
                <div class="clear borderdiv">
                    @if (Model.ReportDetails.Settings.ShowAudience)
                    {
                        <div class="marginleft25 pull-left marginright35">
                            Circulation:&nbsp;<span>@(string.Format("{0:n0}", PMModel.Circulation))</span>
                        </div>
                    }
                    <div class="marginright35 pull-right minWidth52IE8">
                        <div class="margintop-3">
                        </div>
                    </div>
                </div>
            </div>
                            
                    break;


                                    case IQMedia.Shared.Utility.CommonFunctions.CategoryType.SocialMedia:

                    IQArchive_ArchiveSMModel socialMediaModel = item.MediaData as IQArchive_ArchiveSMModel;
                        
            <div id="divMedia_@item.ID" class="media keepTogether">
                <div class="pull-left">
                    <div class="post-date">
                        <span class="month">@Month</span><div>
                            <span class="today">@Day</span></div>
                        <span class="timeWithTimeZone">@Time @sessionInformation.TimeZone</span></div>
                    <div align="center" class="network">
                        <img src="@(BaseUrl + "images/MediaIcon/social-media.png")" alt="@IQMedia.Shared.Utility.CommonFunctions.GetEnumDescription(IQMedia.Shared.Utility.CommonFunctions.CategoryType.SocialMedia)" /></div>
                </div>
                <div class="pull-left maxWidth85">
                    <div>
                        <span class="media-heading"><a href="@socialMediaModel.Url"
                                                target="_blank">@Html.Raw(item.Title)</a></span>
                    </div>
                    <div class="newsMediadiv">
                        @if (!string.IsNullOrWhiteSpace(socialMediaModel.Publication))
                        {
                            <span style="color: #73797F;">@socialMediaModel.Publication - </span>
                        }@Html.Raw(item.DisplayText)
                    </div>
                </div>
                <div class="pull-right">
                </div>
                <div class="clear borderdiv">
                    <div class="marginleft62 pull-left marginright35">
                        @if (Model.ReportDetails.Settings.ShowSentiment)
                        {
                            <div id="divSentimentTV_@item.ID" class="margintop2 lineHeight15 pull-left marginright35">
                                <div class="float-right sentimentLeftFloat actionBarsection">
                                    <div class="float-left">
                                        <img src="@(BaseUrl + "Images/thumbs-up.png")" width="13" alt="" style="margin-bottom:4px;margin-right:1px" /><img src="@(BaseUrl + "Images/thumbs-down.png")" style="margin-top:3px;" width="13" alt="" />&nbsp;
                                    </div>
                                    <div class="divSentimentMain sentimentFont">
                                        <div class="divSentimentMain">
                                            <div class="divSentimentNegPDF">
                                                <div style='width:@((socialMediaModel.NegativeSentiment * 6) > 25 ? 25 : (socialMediaModel.NegativeSentiment * 6))px;'>@socialMediaModel.NegativeSentiment</div>
                                            </div>
                                            <div class="divSentimentPosPDF">
                                                <div style='width:@((socialMediaModel.PositiveSentiment * 6) > 25 ? 25 : (socialMediaModel.PositiveSentiment * 6))px;'>@socialMediaModel.PositiveSentiment</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="marginright35 pull-right minWidth52IE8">
                        <div class="margintop-3">
                        </div>
                    </div>
                </div>
            </div>
                        break;
                                    case IQMedia.Shared.Utility.CommonFunctions.CategoryType.Forum:

                        IQArchive_ArchiveSMModel forumModel = item.MediaData as IQArchive_ArchiveSMModel;
                        
            <div id="divMedia_@item.ID" class="media keepTogether">
                <div class="pull-left">
                    <div class="post-date">
                        <span class="month">@Month</span><div>
                            <span class="today">@Day</span></div>
                        <span class="timeWithTimeZone">@Time @sessionInformation.TimeZone</span></div>
                    <div align="center" class="network">
                        <img src="@(BaseUrl + "images/MediaIcon/forum.png")" alt="@IQMedia.Shared.Utility.CommonFunctions.GetEnumDescription(IQMedia.Shared.Utility.CommonFunctions.CategoryType.Forum)" /></div>
                </div>
                <div class="pull-left maxWidth85">
                    <div>
                        <span class="media-heading"><a href="@forumModel.Url"
                                                target="_blank">@Html.Raw(item.Title)</a></span>
                    </div>
                    <div class="newsMediadiv">
                        @if (!string.IsNullOrWhiteSpace(forumModel.Publication))
                        {
                            <span style="color: #73797F;">@forumModel.Publication - </span>}@Html.Raw(item.DisplayText)
                    </div>
                </div>
                <div class="pull-right">
                </div>
                <div class="clear borderdiv">
                    <div class="marginleft62 pull-left marginright35">
                        @if (Model.ReportDetails.Settings.ShowSentiment)
                        {
                            <div id="divSentimentTV_@item.ID" class="margintop2 lineHeight15 pull-left marginright35">
                                <div class="float-right sentimentLeftFloat actionBarsection">
                                    <div class="float-left">
                                        <img src="@(BaseUrl + "Images/thumbs-up.png")" width="13" alt="" style="margin-bottom:4px;margin-right:1px" /><img src="@(BaseUrl + "Images/thumbs-down.png")" style="margin-top:3px;" width="13" alt="" />&nbsp;
                                    </div>
                                    <div class="divSentimentMain sentimentFont">
                                        <div class="divSentimentMain">
                                            <div class="divSentimentNegPDF">
                                                <div style='width:@((forumModel.NegativeSentiment * 6) > 25 ? 25 : (forumModel.NegativeSentiment * 6))px;'>@forumModel.NegativeSentiment</div>
                                            </div>
                                            <div class="divSentimentPosPDF">
                                                <div style='width:@((forumModel.PositiveSentiment * 6) > 25 ? 25 : (forumModel.PositiveSentiment * 6))px;'>@forumModel.PositiveSentiment</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="marginright35 pull-right minWidth52IE8">
                        <div class="margintop-3">
                        </div>
                    </div>
                </div>
            </div>
                        break;
                                    case IQMedia.Shared.Utility.CommonFunctions.CategoryType.Blog:

                        IQArchive_ArchiveSMModel blogModel = item.MediaData as IQArchive_ArchiveSMModel;
                        
            <div id="divMedia_@item.ID" class="media keepTogether">
                <div class="pull-left">
                    <div class="post-date">
                        <span class="month">@Month</span><div>
                            <span class="today">@Day</span></div>
                        <span class="timeWithTimeZone">@Time @sessionInformation.TimeZone</span></div>
                    <div align="center" class="network">
                        <img src="@(BaseUrl + "images/MediaIcon/blog.png")" alt="@IQMedia.Shared.Utility.CommonFunctions.GetEnumDescription(IQMedia.Shared.Utility.CommonFunctions.CategoryType.Blog)" /></div>
                </div>
                <div class="pull-left maxWidth85">
                    <div>
                        <span class="media-heading"><a href="@blogModel.Url"
                                                target="_blank">@Html.Raw(item.Title)</a></span>
                    </div>
                    <div class="newsMediadiv">
                        @if (!string.IsNullOrWhiteSpace(blogModel.Publication))
                        {
                            <span style="color: #73797F;">@blogModel.Publication - </span>
                        }@Html.Raw(item.DisplayText)
                    </div>
                </div>
                <div class="pull-right">
                </div>
                <div class="clear borderdiv">
                    <div class="marginleft62 pull-left marginright35">
                        @if (Model.ReportDetails.Settings.ShowSentiment)
                        {
                            <div id="divSentimentTV_@item.ID" class="margintop2 lineHeight15 pull-left marginright35">
                                <div class="float-right sentimentLeftFloat actionBarsection">
                                    <div class="float-left">
                                        <img src="@(BaseUrl + "Images/thumbs-up.png")" width="13" alt="" style="margin-bottom:4px;margin-right:1px" /><img src="@(BaseUrl + "Images/thumbs-down.png")" style="margin-top:3px;" width="13" alt="" />&nbsp;
                                    </div>
                                    <div class="divSentimentMain sentimentFont">
                                        <div class="divSentimentMain">
                                            <div class="divSentimentNegPDF">
                                                <div style='width:@((blogModel.NegativeSentiment * 6) > 25 ? 25 : (blogModel.NegativeSentiment * 6))px;'>@blogModel.NegativeSentiment</div>
                                            </div>
                                            <div class="divSentimentPosPDF">
                                                <div style='width:@((blogModel.PositiveSentiment * 6) > 25 ? 25 : (blogModel.PositiveSentiment * 6))px;'>@blogModel.PositiveSentiment</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        @if (Decimal.Compare(Convert.ToDecimal(blogModel.IQAdShareValue), -1M) != 0 && blogModel.Compete_Audience != -1 && sessionInformation.IsCompeteData)
                        {
                            if (Model.ReportDetails.Settings.ShowAudience)
                            {
                            <div class="video-tags margintop0 marginright35">
                                <div class="view" title="Audience">
                                    @if (blogModel.Compete_Audience.HasValue)
                                    {
                                        @(string.Format("{0:n0}", blogModel.Compete_Audience))
                                    }
                                    else
                                    {
                                        @("NA")
                                    }
                                    @if (!string.IsNullOrWhiteSpace(blogModel.Compete_Result) && blogModel.Compete_Result.ToUpper() == "A")
                                    {
                                        <img title="Powered by Compete" style="width: 14px" src="@(BaseUrl + "Images/compete.png")" alt="Compete Image" />
                                    }
                                </div>
                            </div>
                            }

                            if (Model.ReportDetails.Settings.ShowMediaValue)
                            {                
                            <div class="video-tags margintop0">
                                <div class="price">
                                    @if (blogModel.IQAdShareValue.HasValue)
                                    {
                                        @(string.Format("{0:n2}", blogModel.IQAdShareValue))
                                    }
                                    else
                                    {
                                        @("NA")
                                    }
                                </div>
                            </div>
                            }
                        }
                    </div>
                    <div class="marginright35 pull-right minWidth52IE8">
                        <div class="margintop-3">
                        </div>
                    </div>
                </div>
            </div>
                        break;

                                    case IQMedia.Shared.Utility.CommonFunctions.CategoryType.FB:
                        IQArchive_ArchiveSMModel fbModel = item.MediaData as IQArchive_ArchiveSMModel;
                        
            <div id="divMedia_@item.ID" class="media keepTogether">
                <div class="pull-left">
                    <div class="post-date">
                        <span class="month">@Month</span><div>
                            <span class="today">@Day</span></div>
                        <span class="timeWithTimeZone">@Time @sessionInformation.TimeZone</span></div>
                    <div align="center" class="network">
                        <img src="@(BaseUrl + "images/MediaIcon/facebook.png")" alt="@IQMedia.Shared.Utility.CommonFunctions.GetEnumDescription(IQMedia.Shared.Utility.CommonFunctions.CategoryType.FB)" />
                    </div>
                </div>
                <div class="pull-left TweetBodyDivIQP borderBoxSizing">
                    <div class="media-heading-fb">
                        <a target="_blank" href="@fbModel.Url"><span>@item.Title</span></a>
                        <span class="arrow"></span>
                        <span>@fbModel.Publication</span>
                        @if (fbModel.ArticleStats != null && fbModel.ArticleStats.IsVerified)
                        {
                            <span class="verified"></span>
                        }
                    </div>
                    <div class="clear PaddingTopBottom1p TweetBodyText">
                        <div class="">
                            <span>@Html.Raw(item.DisplayText)</span>
                        </div>
                    </div>
                </div>
                <div class="pull-right">
                </div>
                <div class="pull-left">
                    @if (IQMedia.Shared.Utility.CommonFunctions.Validate_url(fbModel.ThumbUrl))
                    {
                        <img src="@fbModel.ThumbUrl" alt="post image" class="borderWidth0  maxWidth48" /><br />
                    }
                </div>
                <div class="clear borderdiv">
                    <div class="pull-left marginleft62 marginRight0">
                        @if (fbModel.ArticleStats != null)
                        {
                            <div class="pull-left marginright35 actionBarsection">
                                <div class="likes" title="Likes">@(string.Format("{0:n0}", fbModel.ArticleStats.Likes))</div>
                            </div>
                            <div class="pull-left marginright35 actionBarsection">
                                <div class="comments" title="Comments">@(string.Format("{0:n0}", fbModel.ArticleStats.Comments))</div>
                            </div>
                            <div class="pull-left marginright35 actionBarsection">
                                <div class="shares" title="Shares">@(string.Format("{0:n0}", fbModel.ArticleStats.Shares))</div>
                            </div>
                        }
                    </div>
                    <div class="pull-right marginright35 margintop-3">
                    </div>
                </div>
            </div>
                        break;

                                    case IQMedia.Shared.Utility.CommonFunctions.CategoryType.Radio:
                        IQArchive_ArchiveTVEyesModel TVEyesModel = item.MediaData as IQArchive_ArchiveTVEyesModel;
                        Month = TVEyesModel.LocalDateTime != null ? TVEyesModel.LocalDateTime.ToString("MMM", System.Globalization.CultureInfo.InvariantCulture) : string.Empty;
                        Day = TVEyesModel.LocalDateTime != null ? TVEyesModel.LocalDateTime.Day.ToString() : string.Empty;
                        Time = TVEyesModel.LocalDateTime != null ? TVEyesModel.LocalDateTime.ToString("hh:mm tt") : string.Empty;
            <div id="divMedia_@item.ID" class="media keepTogether">
                <div class="pull-left">
                    <div>
                        <div class="post-date">
                            <span class="month">@Month</span><div>
                                <span class="today">@Day</span></div>
                            <span class="timeWithTimeZone">@Time @TVEyesModel.TimeZone</span></div>
                        <div align="center" class="network">
                            <img src="@(BaseUrl + "images/MediaIcon/radio.png")" alt="@IQMedia.Shared.Utility.CommonFunctions.GetEnumDescription(IQMedia.Shared.Utility.CommonFunctions.CategoryType.Radio)" /></div>
                    </div>
                </div>
                <div class="pull-left tvFeedsMarket tmStationDiv">
                    <div style="float: left; color: Red">
                        <div class="minHeight32">
                            @TVEyesModel.StationID</div>
                    </div>
                </div>
                <div>
                    <div class="pull-left media-body width83p">
                        <span class="media-heading"><a target="_blank" href="@(System.Configuration.ConfigurationManager.AppSettings["RadioClipPlayerURL"] + Url.Encode(IQMedia.Shared.Utility.CommonFunctions.GenerateRandomString() + IQMedia.Shared.Utility.CommonFunctions.EncryptStringAES(item.ID.ToString(), IQMedia.Shared.Utility.CommonFunctions.AesKeyLibRadioPlayer, IQMedia.Shared.Utility.CommonFunctions.AesIVLibRadioPlayer)))">@item.Title</a></span>
                        <div class="clearfix">
                        </div>
                        @if (!string.IsNullOrWhiteSpace(TVEyesModel.Market))
                        {
                            <span style="color: #73797F;">@TVEyesModel.Market - </span>
                        }
                        @Html.Raw(item.DisplayText)
                    </div>
                    <div class="clear borderdiv">
                        @if (Model.ReportDetails.Settings.ShowSentiment)
                        {
                            <div id="divSentimentTM_@item.ID" class="margintop2 lineHeight15 pull-left marginright35">
                                <div class="float-right sentimentLeftFloat actionBarsection">
                                    <div class="float-left">
                                        <img src="@(BaseUrl + "Images/thumbs-up.png")" width="13" alt="" style="margin-bottom:4px;margin-right:1px" /><img src="@(BaseUrl + "Images/thumbs-down.png")" style="margin-top:3px;" width="13" alt="" />&nbsp;
                                    </div>
                                    <div class="divSentimentMain sentimentFont">
                                        <div class="divSentimentMain">
                                            <div class="divSentimentNegPDF">
                                                <div style='width:@((TVEyesModel.NegativeSentiment * 6) > 25 ? 25 : (TVEyesModel.NegativeSentiment * 6))px;'>@TVEyesModel.NegativeSentiment</div>
                                            </div>
                                            <div class="divSentimentPosPDF">
                                                <div style='width:@((TVEyesModel.PositiveSentiment * 6) > 25 ? 25 : (TVEyesModel.PositiveSentiment * 6))px;'>@TVEyesModel.PositiveSentiment</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                @if (!string.IsNullOrEmpty(TVEyesModel.DMARank))
                                {
                                    <div class="TVvideo-tags margintop0 marginright35 actionBarsection">
                                        Market Rank:&nbsp;<span>@TVEyesModel.DMARank</span>
                                    </div>
                                }
                            </div>
                        }
                        <div class="marginright35 pull-right minWidth52IE8">
                            <div class="margintop-3">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
                        break;
                                    case IQMedia.Shared.Utility.CommonFunctions.CategoryType.MS:

                        IQArchive_ArchiveMiscModel miscModel = item.MediaData as IQArchive_ArchiveMiscModel;

                        Month = miscModel.CreateDT.ToString("MMM", System.Globalization.CultureInfo.InvariantCulture);
                        Day = miscModel.CreateDT.Day.ToString();
                        Time = miscModel.CreateDT.ToString("hh:mm tt");

                        string catimg = string.Empty;
                        switch (miscModel.FileType)
                        {
                            case IQMedia.Shared.Utility.CommonFunctions.IQUGCMediaTypes.Doc:
                                catimg = "word.png";
                                break;
                            case IQMedia.Shared.Utility.CommonFunctions.IQUGCMediaTypes.Excel:
                                catimg = "excel.png";
                                break;
                            case IQMedia.Shared.Utility.CommonFunctions.IQUGCMediaTypes.Pdf:
                                catimg = "pdf.png";
                                break;
                            case IQMedia.Shared.Utility.CommonFunctions.IQUGCMediaTypes.Image:
                                catimg = "image.png";
                                break;
                            default:
                                catimg = string.Empty;
                                break;
                        }
                        
            <div id="divMedia_@item.ID" class="media keepTogether">
                <div class="pull-left">
                    <div class="post-date">
                        <span class="month">@Month</span><div>
                            <span class="today">@Day</span></div>
                        <span class="timeWithTimeZone">@Time @miscModel.TimeZone</span></div>
                    <div align="center" class="network">
                        <img src="@(BaseUrl + "images/MediaIcon/" + catimg)" /></div>
                </div>
                <div class="pull-left maxWidth85">
                    <div>
                        <span class="media-heading"><a href="@miscModel.MediaUrl" target="_blank">@Html.Raw(item.Title)</a></span>
                    </div>
                    <div class="newsMediadiv">
                        @Html.Raw(item.DisplayText)
                    </div>
                </div>
                <div class="clear">
                </div>
            </div>
                   break;
                                    case IQMedia.Shared.Utility.CommonFunctions.CategoryType.PQ:

                   IQArchive_ArchivePQModel pqModel = item.MediaData as IQArchive_ArchivePQModel;
                   string authors = String.Empty;
                   if (pqModel.Authors != null && pqModel.Authors.Count > 0)
                   {
                       if (pqModel.Authors.Count > 2)
                       {
                           authors = "(" + String.Join(", ", pqModel.Authors.Take(2)) + ", ...) ";
                       }
                       else
                       {
                           authors = "(" + String.Join(", ", pqModel.Authors) + ") ";
                       }
                   }
                        
            <div id="divMedia_@item.ID" class="media keepTogether">
                <div class="pull-left">
                    <div class="post-date">
                        <span class="month">@Month</span><div>
                            <span class="today">@Day</span></div>
                        <span class="timeWithTimeZone">&nbsp;</span></div>
                    <div align="center" class="network">
                        <img src="@(BaseUrl + "images/MediaIcon/print-media_T.png")" alt="@IQMedia.Shared.Utility.CommonFunctions.GetEnumDescription(IQMedia.Shared.Utility.CommonFunctions.CategoryType.PQ)" /></div>
                </div>
                <div class="pull-left maxWidth85">
                    <div>
                        <span class="media-heading"><a href="@(BaseUrl + "/ProQuest/Index?source=library&id=" + item.ID)" target="_blank">@Html.Raw(item.Title)</a></span>
                    </div>
                    <div class="newsMediadiv">
                        <span style="color: #73797F;">@pqModel.Publication @authors</span>- @Html.Raw(item.DisplayText)
                    </div>
                </div>
                <div class="pull-right">
                </div>
                <div class="clear borderdiv">
                    <div class="marginleft62 pull-left marginright35">
                        @if (Model.ReportDetails.Settings.ShowSentiment)
                        {
                            <div id="divSentimentTV_@item.ID" class="margintop2 lineHeight15 pull-left marginright35">
                                <div class="float-right sentimentLeftFloat actionBarsection">
                                    <div class="float-left">
                                        <img src="@(BaseUrl + "Images/thumbs-up.png")" width="13" alt="" style="margin-bottom:4px;margin-right:1px" /><img src="@(BaseUrl + "Images/thumbs-down.png")" style="margin-top:3px;" width="13" alt="" />&nbsp;
                                    </div>
                                    <div class="divSentimentMain sentimentFont">
                                        <div class="divSentimentMain">
                                            <div class="divSentimentNegPDF">
                                                <div style='width:@((pqModel.NegativeSentiment * 6) > 25 ? 25 : (pqModel.NegativeSentiment * 6))px;'>@pqModel.NegativeSentiment</div>
                                            </div>
                                            <div class="divSentimentPosPDF">
                                                <div style='width:@((pqModel.PositiveSentiment * 6) > 25 ? 25 : (pqModel.PositiveSentiment * 6))px;'>@pqModel.PositiveSentiment</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="marginright35 pull-right minWidth52IE8">
                        <div class="margintop-3">
                        </div>
                    </div>
                </div>
            </div>
                        break;
                                }
                            }
                        }
                    }
                }
            }
        }
    </div>
</body>
</html>
