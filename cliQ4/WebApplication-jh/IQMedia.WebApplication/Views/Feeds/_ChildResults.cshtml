@using IQMedia.Model;
@using IQMedia.Shared.Utility;
@using System.Text.RegularExpressions;
@using IQMedia.WebApplication.Models.TempData;
@model IQAgent_MediaResultsModel
@if (Model != null)
{
    SessionInformation sessioninfo = IQMedia.WebApplication.Utility.CommonFunctions.GetSessionInformation();
    FeedsTempData feedsTempData = ((IQMedia.WebApplication.Controllers.FeedsController)this.ViewContext.Controller).GetTempData();
    int wordsBeforeSpan = Convert.ToInt32(System.Configuration.ConfigurationManager.AppSettings["HighlightWordsBeforeSpan"]);
    int wordsAfterSpan = Convert.ToInt32(System.Configuration.ConfigurationManager.AppSettings["HighlightWordsAfterSpan"]);
    string separator = "...&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...";
    string highlightKeyword = "span";
    string mediaIconFormat = "../images/MediaIcon/{0}?v=1.3";

    string maxNegativeSentimetnWidth = string.Empty;
    string maxPositiveSentimetnWidth = string.Empty;
    string iqAdShareValue = string.Empty;
    string nielsen_Result = string.Empty;
    string NielsenAudience = string.Empty;
    string TotalNeilsenAudience = string.Empty;
    string TotalAdShareValue = string.Empty;
    string TotalNielsen_Result = string.Empty;
    bool useProminenceMediaValue = feedsTempData.UseProminenceMediaValue == true;
    
    switch (Model.MediaType)
    {
        case "TV":

            IQAgent_TVResultsModel iQAgent_TVResultsModel = (IQAgent_TVResultsModel)Model.MediaData;
            string highlightedText = string.Empty;
            string highlightedCCOutput = string.Empty;
            iqAdShareValue = string.Empty;

            if (iQAgent_TVResultsModel.highlightedCCOutput != null && iQAgent_TVResultsModel.highlightedCCOutput.CC != null)
            {
                highlightedCCOutput = string.Join(" ", iQAgent_TVResultsModel.highlightedCCOutput.CC.Select(c => c.Text));
            }

            highlightedCCOutput = highlightedCCOutput.Replace("&lt;", "<").Replace("&gt;", ">");

            if (highlightedCCOutput.Length > 300)
            {
                highlightedText = highlightedCCOutput.Substring(0, 300);
                highlightedText = System.Text.RegularExpressions.Regex.Replace(highlightedText, "(</span(?!>)|</spa(?!n>)|</sp(?!an>)|</s(?!pan>)|</(?!span>))\\Z", "</span>");
            }
            else
            {
                highlightedText = highlightedCCOutput;
            }

            highlightedText = CommonFunctions.ProcessHighlightingText(highlightedCCOutput, highlightedText);

            if ((Model.NegativeSentiment * 6) > 25)
            {
                maxNegativeSentimetnWidth = "25px";
            }
            else
            {
                maxNegativeSentimetnWidth = Convert.ToString(Model.NegativeSentiment * 6) + "px";
            }


            if ((Model.PositiveSentiment * 6) > 25)
            {
                maxPositiveSentimetnWidth = "25px";
            }
            else
            {
                maxPositiveSentimetnWidth = Convert.ToString(Model.PositiveSentiment * 6) + "px";
            }

            if (@iQAgent_TVResultsModel.Nielsen_Audience.HasValue)
            {
                NielsenAudience = string.Format("{0:n0}", iQAgent_TVResultsModel.Nielsen_Audience);
            }
  
            if (iQAgent_TVResultsModel.IQAdShareValue.HasValue && (useProminenceMediaValue == false || (iQAgent_TVResultsModel.IQProminenceMultiplier != null && Decimal.Compare(Convert.ToDecimal(iQAgent_TVResultsModel.IQProminenceMultiplier), 0M) != 0)))
            {
                iqAdShareValue = string.Format("{0:n2}", useProminenceMediaValue ? (iQAgent_TVResultsModel.IQAdShareValue.Value * iQAgent_TVResultsModel.IQProminenceMultiplier) : iQAgent_TVResultsModel.IQAdShareValue.Value);

                if (!string.IsNullOrWhiteSpace(iQAgent_TVResultsModel.Nielsen_Result))
                {
                    nielsen_Result = iQAgent_TVResultsModel.Nielsen_Result.ToUpper();
                }
            }

            decimal SumAdShareValue = iQAgent_TVResultsModel.National_IQAdShareValue.HasValue ? iQAgent_TVResultsModel.National_IQAdShareValue.Value : 0;
            if (SumAdShareValue > 0)
            {
                TotalAdShareValue = string.Format("{0:n2}", (SumAdShareValue));
                TotalNielsen_Result = iQAgent_TVResultsModel.National_Nielsen_Result;
            }

            long SumAudience = iQAgent_TVResultsModel.National_Nielsen_Audience.HasValue ? iQAgent_TVResultsModel.National_Nielsen_Audience.Value : 0;
            if (SumAudience > 0)
            {
                TotalNeilsenAudience = string.Format("{0:n0}", (SumAudience));
            }                             
                
            <div class="tvFeedsDate">
                <div class="pull-left">
                    <div class="post-date">
                        <span class="month">@iQAgent_TVResultsModel.LocalDateTime.ToString("MMM", System.Globalization.CultureInfo.InvariantCulture)
                        </span>
                        <div>
                            <span class="today">@iQAgent_TVResultsModel.LocalDateTime.Day </span>
                        </div>
                        <span class="timeWithTimeZone">@iQAgent_TVResultsModel.LocalDateTime.ToString("hh:mm tt")
                            @iQAgent_TVResultsModel.TimeZone
                        </span>
                    </div>
                    <div class="network" align="center">
                        <img src="@String.Format(mediaIconFormat, "network-icon.png")" title="@CommonFunctions.GetEnumDescription(CommonFunctions.CategoryType.TV)" alt="" />
                    </div>
                </div>
            </div>
            <div class="pull-left tvFeedsMarket">
                <div style="float: left">
                    <div class="minHeight32">
                        <img alt="" src="@iQAgent_TVResultsModel.StationLogo" /></div>
                </div>
            </div>
            <div class="tvFeedsContent">
                <div class="pull-left media-body tvFeedsDetail">
                    <span class="media-heading">
                        @iQAgent_TVResultsModel.Title120
                    </span>
                    <div class="clearfix">
                    </div>
                    @if (!string.IsNullOrWhiteSpace(iQAgent_TVResultsModel.Market))
                    {
                        <span style="color: #73797F;">
                            @iQAgent_TVResultsModel.Market - </span>
                    }
                    @Html.Raw(highlightedText)
                </div>
            </div>
            <div class="float-right tvFeedsThumbParent">
                <div class="float-left video-thumb-width tvFeedsThumb marginRight10">
                    <div class="positionRelative">
                        <a onclick="LoadPlayerbyAgentID('@Model.ID');" class="cursorPointer">
                            @{
                                                    string rawMediaThumbUrl = string.Empty;
                                                    if (!string.IsNullOrWhiteSpace(iQAgent_TVResultsModel.RawMediaThumbUrl))
                                                    {
                                                        rawMediaThumbUrl = iQAgent_TVResultsModel.RawMediaThumbUrl;
                                                    }
                                                    else
                                                    {
                                                        rawMediaThumbUrl = "../images/video.png";
                                                    }
                            }
                            <img class="media-object" src="@rawMediaThumbUrl" alt="" />
                            @if (!string.IsNullOrWhiteSpace(iQAgent_TVResultsModel.RawMediaThumbUrl))
                            {
                                <div class="PlayButton cursorPointer VideoPlayImageDiv">
                                    <img width="28" height="28" id="ibtnPlay" src="../Images/Play.png" alt="" /></div>  
                            }
                        </a>
                    </div>
                </div>
                <div class="float-right tvFeedsCheck">
                    <input type="checkbox" value="@Model.ID:@Model.MediaType" id="chkdivResults_@Model.ID" onclick="CheckUncheckMasterCheckBox(this.id,'ulMediaResults','chkInputAll');" /></div>
                <input type="hidden" value="@((iQAgent_TVResultsModel._ParentID == 0 || iQAgent_TVResultsModel._ParentID == null) ? "true" : "false")" id="hdnIsParent_@Model.ID" />
                <div class="clearfix">
                </div>
            </div>
            <div class="clear borderdiv">
                <div class="actionBarLeftDivTV float-left">
                    <div style="width: 65px" class="float-left">
                        <div align="center" class="margintop2">
                            @if (iQAgent_TVResultsModel.ChildResults != null && iQAgent_TVResultsModel.ChildResults.Count > 0)
                            {
                                <a href="javascript:void(0);"  title="View More" onclick="ShowChild('@Model.ID', 'TV');">
                                    <img alt="" id="expand_@Model.ID" src="../images/collapse.png" /></a>
                            }
                        </div>
                    </div>
                    <div id="divSentimentTV_@Model.ID" class="margintop2 lineHeight15 float-left marginright35 actionBarsection">
                        <div class="float-right sentimentLeftFloat actionBarsection" title="Sentiment">
                            <div class="float-left">
                                <img src="../Images/thumbs-up.png" style="width: 13px; margin-top: -4px;"><img src="../Images/thumbs-down.png"
                                    style="width: 13px; margin-top: 3px;">&nbsp;</div>
                            <div class="divSentimentMain sentimentFont">
                                <div class="divSentimentMain">
                                    <div class="divSentimentNeg">
                                        <div style='width:@maxNegativeSentimetnWidth'>
                                            @Model.NegativeSentiment
                                        </div>
                                    </div>
                                    <div class="divSentimentPos">
                                        <div style='width:@maxPositiveSentimetnWidth'>
                                            @Model.PositiveSentiment
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="float-left tvchild-tag margintop2">
                        <div class="TVvideo-tags-ParentChild margintop0 actionBarsection">
                            <div class="view" title="Audience">
                                @if (iQAgent_TVResultsModel.Nielsen_Audience > 0 && sessioninfo.IsNielsenData)
                                {
                                    <text>@NielsenAudience</text>
                                }
                            </div>
                        </div>
                        <div class="TVvideo-tags-ParentChild margintop0  actionBarsection">
                            <div class="price">
                                @if (!string.IsNullOrEmpty(iqAdShareValue) && sessioninfo.IsNielsenData)
                                {
                                    <text>@iqAdShareValue @nielsen_Result</text>
                                }
                            </div>
                        </div>
                        <div class="TVvideo-tags-ParentChild margintop0  actionBarsection">
                            <div class="totalprice">
                                @if (!string.IsNullOrEmpty(TotalAdShareValue) && sessioninfo.IsNielsenData)
                                {
                                    <text>@TotalAdShareValue @TotalNielsen_Result</text>
                                }
                            </div>
                        </div>
                        <div class="TVvideo-tags-ParentChildLast margintop0 actionBarsection">
                            <div class="totalview" title="Audience">
                                @if (!string.IsNullOrEmpty(TotalNeilsenAudience) && sessioninfo.IsNielsenData)
                                {
                                    <text>@TotalNeilsenAudience</text>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="clear" id="divChildMedia_@Model.ID">
                @foreach (IQAgent_MediaResultsModel childItem in iQAgent_TVResultsModel.ChildResults)
                {
                    IQAgent_TVResultsModel iQAgent_ChildTVResultsModel = (IQAgent_TVResultsModel)childItem.MediaData;
                    highlightedText = string.Empty;
                    highlightedCCOutput = string.Empty;

                    if (iQAgent_ChildTVResultsModel.highlightedCCOutput != null && iQAgent_ChildTVResultsModel.highlightedCCOutput.CC != null)
                    {
                        highlightedCCOutput = string.Join(" ", iQAgent_ChildTVResultsModel.highlightedCCOutput.CC.Select(c => c.Text));
                    }

                    highlightedCCOutput = highlightedCCOutput.Replace("&lt;", "<").Replace("&gt;", ">");

                    if (highlightedCCOutput.Length > 300)
                    {
                        highlightedText = highlightedCCOutput.Substring(0, 300);
                        highlightedText = System.Text.RegularExpressions.Regex.Replace(highlightedText, "(</span(?!>)|</spa(?!n>)|</sp(?!an>)|</s(?!pan>)|</(?!span>))\\Z", "</span>");
                    }
                    else
                    {
                        highlightedText = highlightedCCOutput;
                    }

                    highlightedText = CommonFunctions.ProcessHighlightingText(highlightedCCOutput, highlightedText);

                    if ((childItem.NegativeSentiment * 6) > 25)
                    {
                        maxNegativeSentimetnWidth = "25px";
                    }
                    else
                    {
                        maxNegativeSentimetnWidth = Convert.ToString(childItem.NegativeSentiment * 6) + "px";
                    }

                    if ((childItem.PositiveSentiment * 6) > 25)
                    {
                        maxPositiveSentimetnWidth = "25px";
                    }
                    else
                    {
                        maxPositiveSentimetnWidth = Convert.ToString(childItem.PositiveSentiment * 6) + "px";
                    }

                    if (@iQAgent_ChildTVResultsModel.Nielsen_Audience.HasValue)
                    {
                        NielsenAudience = string.Format("{0:n0}", iQAgent_ChildTVResultsModel.Nielsen_Audience);
                    }

                    if (iQAgent_ChildTVResultsModel.IQAdShareValue.HasValue && (useProminenceMediaValue == false || (iQAgent_ChildTVResultsModel.IQProminenceMultiplier != null && Decimal.Compare(Convert.ToDecimal(iQAgent_ChildTVResultsModel.IQProminenceMultiplier), 0M) != 0)))
                    {
                        iqAdShareValue = string.Format("{0:n2}", useProminenceMediaValue ? (iQAgent_ChildTVResultsModel.IQAdShareValue.Value * iQAgent_ChildTVResultsModel.IQProminenceMultiplier) : iQAgent_ChildTVResultsModel.IQAdShareValue.Value);

                        if (!string.IsNullOrWhiteSpace(iQAgent_ChildTVResultsModel.Nielsen_Result))
                        {
                            nielsen_Result = iQAgent_ChildTVResultsModel.Nielsen_Result.ToUpper();
                        }
                    }
                    <div class="media" id="divMedia_@childItem.ID">
                        <div class="clear">
                            <div class="actionBarLeftDivTV float-left">
                                <div style="width: 65px" class="float-left">
                                    <div align="center" class="margintop5">
                                        <img alt="" src="@iQAgent_ChildTVResultsModel.StationLogo" /></div>
                                </div>
                                <div id="divSentimentTV_@childItem.ID" class="lineHeight15 float-left marginright35 tvsentimentmargintop">
                                    <div class="float-right sentimentLeftFloat margintop2" title="Sentiment">
                                        <div class="float-left">
                                            <img src="../Images/thumbs-up.png" style="width: 13px; margin-top: -4px;"><img src="../Images/thumbs-down.png"
                                                style="width: 13px; margin-top: 3px;">&nbsp;</div>
                                        <div class="divSentimentMain sentimentFont">
                                            <div class="divSentimentMain">
                                                <div class="divSentimentNeg">
                                                    <div style='width:@maxNegativeSentimetnWidth'>
                                                        @childItem.NegativeSentiment
                                                    </div>
                                                </div>
                                                <div class="divSentimentPos">
                                                    <div style='width:@maxPositiveSentimetnWidth'>
                                                        @childItem.PositiveSentiment
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="float-left tvchild-tag margintop5">
                                    <div class="TVvideo-tags-ParentChild margintop0 float-left">
                                        <div class="view" title="Audience">
                                            @if (Convert.ToDecimal(iQAgent_ChildTVResultsModel.IQAdShareValue) > 0 && sessioninfo.IsNielsenData)
                                            {            
                                                <text>@NielsenAudience</text>
                                            }
                                        </div>
                                    </div>
                                    <div class="TVvideo-tags-ParentChild margintop0  float-left">
                                        <div class="price">
                                            @if (!string.IsNullOrEmpty(iqAdShareValue) && sessioninfo.IsNielsenData)
                                            {
                                                <text>@iqAdShareValue @nielsen_Result</text>
                                            }
                                        </div>
                                    </div>
                                    <div class="TVvideo-tags-ParentChild margintop0  float-left">
                                        @iQAgent_ChildTVResultsModel.LocalDateTime.ToString("hh:mm tt") @iQAgent_ChildTVResultsModel.TimeZone
                                    </div>
                                    <div class="TVvideo-tags-ParentChildLast margintop0  float-left trimtext">
                                        @iQAgent_ChildTVResultsModel.Market
                                    </div>
                                </div>
                            </div>
                            <div class="float-right tvFeedsThumbParentChild">
                                <div class="float-left video-thumb-width tvFeedsThumb marginRight10" align="center">
                                    <div class="positionRelative">
                                        <a onclick="LoadPlayerbyAgentID('@childItem.ID');" class="cursorPointer">
                                            <img width="42" height="42" id="ibtnPlay" src="../Images/Play.png" alt="" />
                                        </a>
                                    </div>
                                </div>
                                <div class="float-right tvFeedsCheck tvsentimentmargintop">
                                    <input type="checkbox" style="margin-top:0;" value="@childItem.ID:@childItem.MediaType" onclick="CheckUncheckMasterCheckBox(this.id,'ulMediaResults','chkInputAll');" id="chkdivChildResults_@childItem.ID"  /></div>
                                <input type="hidden" value="@((iQAgent_ChildTVResultsModel._ParentID == 0 || iQAgent_ChildTVResultsModel._ParentID == null) ? "true" : "false")" id="hdnIsParent_@childItem.ID" />
                                <div class="clearfix">
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

                break;
        case "NM":
                IQAgent_NewsResultsModel iQAgent_NewsResultsModel = (IQAgent_NewsResultsModel)Model.MediaData;

                string highlightedNewsText = string.Empty;
                string HighlightedNewsOutput = string.Empty;
                string highlightedOriginalText = string.Empty;
                iqAdShareValue = string.Empty;

                if (iQAgent_NewsResultsModel.HighlightedNewsOutput != null && iQAgent_NewsResultsModel.HighlightedNewsOutput.Highlights != null)
                {
                    highlightedOriginalText = string.Join(" ", iQAgent_NewsResultsModel.HighlightedNewsOutput.Highlights.Select(c => c));
                    HighlightedNewsOutput = IQMedia.Shared.Utility.CommonFunctions.GetWordsAround(highlightedOriginalText, highlightKeyword, wordsBeforeSpan, wordsAfterSpan, separator);

                    if (string.IsNullOrWhiteSpace(HighlightedNewsOutput))
                    {
                        HighlightedNewsOutput = highlightedOriginalText;
                    }
                }
                if (HighlightedNewsOutput.Length > 300)
                {
                    highlightedNewsText = HighlightedNewsOutput.Substring(0, 300);
                    highlightedNewsText = System.Text.RegularExpressions.Regex.Replace(highlightedNewsText, "(</span(?!>)|</spa(?!n>)|</sp(?!an>)|</s(?!pan>)|</(?!span>))\\Z", "</span>");
                }
                else
                {
                    highlightedNewsText = HighlightedNewsOutput;
                }

                highlightedNewsText = CommonFunctions.ProcessHighlightingText(HighlightedNewsOutput, highlightedNewsText);

                maxNegativeSentimetnWidth = string.Empty;
                if ((Model.NegativeSentiment * 6) > 25)
                {
                    maxNegativeSentimetnWidth = "25px";
                }
                else
                {
                    maxNegativeSentimetnWidth = Convert.ToString(Model.NegativeSentiment * 6) + "px";
                }

                if ((Model.PositiveSentiment * 6) > 25)
                {
                    maxPositiveSentimetnWidth = "25px";
                }
                else
                {
                    maxPositiveSentimetnWidth = Convert.ToString(Model.PositiveSentiment * 6) + "px";
                }
        <div class="tvFeedsDate">
            <div class="pull-left">
                <div class="post-date">
                    <span class="month">@Model.MediaDateTime.ToString("MMM", System.Globalization.CultureInfo.InvariantCulture)</span>
                    <div>
                        <span class="today">@Model.MediaDateTime.Day</span>
                    </div>
                    <span class="timeWithTimeZone">@Model.MediaDateTime.ToString("hh:mm tt") @sessioninfo.TimeZone</span>
                </div>
                <div class="network" align="center">
                    <img src="@String.Format(mediaIconFormat, "news.png")" title="@CommonFunctions.GetEnumDescription(CommonFunctions.CategoryType.NM)" alt="" />
                </div>
            </div>
        </div>
        <div class="pull-left maxWidth83">
            <div>
                <span class="media-heading">
                    @if (iQAgent_NewsResultsModel.IQLicense == 3)
                    {
                        <img src="@String.Format(mediaIconFormat, "LexisNexis_Small.png")" title="LexisNexis(R)" alt="LexisNexis(R)" class="lexisNexisImg" />
                    }
                    <a target="_blank" href="@(iQAgent_NewsResultsModel.IQLicense > 0 ? Url.Action("Index", "Article", new { au = IQMedia.Shared.Utility.CommonFunctions.EncryptLicenseStringAES(sessioninfo.CustomerKey + "¶Feeds¶" + iQAgent_NewsResultsModel.Url + "&u1=cliq40&u2=" + sessioninfo.ClientID + "¶" + iQAgent_NewsResultsModel.IQLicense) }) : iQAgent_NewsResultsModel.Url)">
                        @iQAgent_NewsResultsModel.Title
                    </a>
                </span>
            </div>
            <div class="newsMediadiv">
                @if (!string.IsNullOrWhiteSpace(iQAgent_NewsResultsModel.Publication))
                {
                    <span style="color: #73797F;" id="lblCompete_@Model.ID">@iQAgent_NewsResultsModel.Publication
                        - </span>
                }
                @Html.Raw(highlightedNewsText)
            </div>
        </div>
        <div class="pull-right">
            <input type="checkbox" onclick="CheckUncheckMasterCheckBox(this.id,'ulMediaResults','chkInputAll');" value="@Model.ID:@Model.MediaType" id="chkdivResults_@Model.ID" /></div>
        <div class="clear borderdiv">
            <div class="actionBarLeftDivNM  float-left">
                <div style="width: 65px" class="float-left">
                    <div align="center" class="margintop2">
                        <a href="javascript:void(0);"  title="View More" onclick="ShowChild('@Model.ID', 'NM');">
                            <img alt="" id="expand_@Model.ID" src="../images/collapse.png" /></a>
                    </div>
                </div>
                <div id="divSentimentSM_@Model.ID" class="margintop2 lineHeight15 float-left marginright35 actionBarsection">
                    <div class="float-right sentimentLeftFloat actionBarsection" title="Sentiment">
                        <div class="float-left">
                            <img src="../Images/thumbs-up.png" style="width: 13px; margin-top: -4px;"><img src="../Images/thumbs-down.png"
                                style="width: 13px; margin-top: 3px;">&nbsp;</div>
                        <div class="divSentimentMain sentimentFont">
                            <div class="divSentimentMain">
                                <div class="divSentimentNeg">
                                    <div style='width:@maxNegativeSentimetnWidth'>
                                        @Model.NegativeSentiment
                                    </div>
                                </div>
                                <div class="divSentimentPos">
                                    <div style='width:@maxPositiveSentimetnWidth'>
                                        @Model.PositiveSentiment
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @if (sessioninfo.IsCompeteData)
                {
                    if (iQAgent_NewsResultsModel.Compete_Audience.HasValue && iQAgent_NewsResultsModel.Compete_Audience != -1)
                    {
                        NielsenAudience = string.Format("{0:n0}", iQAgent_NewsResultsModel.Compete_Audience);
                    }
                    else
                    {
                        NielsenAudience = "NA";
                    }

                    if (iQAgent_NewsResultsModel.IQAdShareValue.HasValue && Decimal.Compare(Convert.ToDecimal(iQAgent_NewsResultsModel.IQAdShareValue), -1M) != 0 && (useProminenceMediaValue == false || (iQAgent_NewsResultsModel.IQProminenceMultiplier != null && Decimal.Compare(Convert.ToDecimal(iQAgent_NewsResultsModel.IQProminenceMultiplier), 0M) != 0)))
                    {
                        iqAdShareValue = string.Format("{0:n2}", useProminenceMediaValue ? (iQAgent_NewsResultsModel.IQAdShareValue.Value * iQAgent_NewsResultsModel.IQProminenceMultiplier) : iQAgent_NewsResultsModel.IQAdShareValue.Value);
                    }
                    else
                    {
                        iqAdShareValue = "NA";
                    }
                    
                    <div class="float-left nmchild-tag margintop2">
                        <div class="NMvideo-tags-ParentChild margintop0 actionBarsection">
                            <div class="view" title="Audience">
                                @NielsenAudience
                                @if (!string.IsNullOrWhiteSpace(iQAgent_NewsResultsModel.Compete_Result) && iQAgent_NewsResultsModel.Compete_Result.ToUpper() == "A")
                                {
                                    <img title="Powered by Compete" style="width: 14px; vertical-align: inherit;" src="../Images/compete.png"
                                        alt="Compete Image" />
                                }
                            </div>
                        </div>
                        <div class="NMvideo-tags-ParentChild margintop0  actionBarsection">
                            <div class="price">
                                @iqAdShareValue
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="marginright35 float-right minWidth52IE8">
                <div class="margintop3">
                    <a target="_blank" class="cursorPointer saveMedia" onclick="ShowSaveArticle(@Model.ID,this.id);return false;" id="aSaveNM_@Model.ID">
                        <img src="../images/save.png" alt="Save" title="Save Article" /></a><a class="paddinLeft20" href="@(iQAgent_NewsResultsModel.IQLicense > 0 ? Url.Action("Index", "Article", new { au = IQMedia.Shared.Utility.CommonFunctions.EncryptLicenseStringAES(sessioninfo.CustomerKey + "¶Feeds¶" + iQAgent_NewsResultsModel.Url + "&u1=cliq40&u2=" + sessioninfo.ClientID + "¶" + iQAgent_NewsResultsModel.IQLicense) }) : iQAgent_NewsResultsModel.Url)" target="_blank" id="aShowNews_@Model.ID" ><img
                            src="../images/viewArticle.png" alt="View" title="View Article" /></a>
                </div>
            </div>
        </div>
        <div class="clear" id="divChildMedia_@Model.ID">
            @foreach (IQAgent_MediaResultsModel childItem in iQAgent_NewsResultsModel.ChildResults)
            {
                IQAgent_NewsResultsModel iQAgent_ChildNewsResultsModel = (IQAgent_NewsResultsModel)childItem.MediaData;


                maxNegativeSentimetnWidth = string.Empty;
                if ((Model.NegativeSentiment * 6) > 25)
                {
                    maxNegativeSentimetnWidth = "25px";
                }
                else
                {
                    maxNegativeSentimetnWidth = Convert.ToString(Model.NegativeSentiment * 6) + "px";
                }

                if ((Model.PositiveSentiment * 6) > 25)
                {
                    maxPositiveSentimetnWidth = "25px";
                }
                else
                {
                    maxPositiveSentimetnWidth = Convert.ToString(Model.PositiveSentiment * 6) + "px";
                }
                    
                <div class="media" id="divMedia_@childItem.ID">
                    <div class="clear">
                        <div class="actionBarLeftDivNM float-left">
                            <div style="width: 65px" class="float-left">
                                <div align="center" class="margintop2">
                                    @if (iQAgent_ChildNewsResultsModel.IQLicense == 3)
                                    {
                                        <img src="@String.Format(mediaIconFormat, "LexisNexis_Small.png")" title="LexisNexis(R)" alt="LexisNexis(R)" class="lexisNexisImg" />
                                    }
                                </div>
                            </div>
                            <div id="divSentimentTV_@childItem.ID" class="lineHeight15 float-left marginright35 tvsentimentmargintop">
                                <div class="float-right sentimentLeftFloat margintop2" title="Sentiment">
                                    <div class="float-left">
                                        <img src="../Images/thumbs-up.png" style="width: 13px; margin-top: -4px;"><img src="../Images/thumbs-down.png"
                                            style="width: 13px; margin-top: 3px;">&nbsp;</div>
                                    <div class="divSentimentMain sentimentFont">
                                        <div class="divSentimentMain">
                                            <div class="divSentimentNeg">
                                                <div style='width:@maxNegativeSentimetnWidth'>
                                                    @childItem.NegativeSentiment
                                                </div>
                                            </div>
                                            <div class="divSentimentPos">
                                                <div style='width:@maxPositiveSentimetnWidth'>
                                                    @childItem.PositiveSentiment
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="float-left nmchild-tag tvsentimentmargintop">
                                @if (sessioninfo.IsCompeteData)
                                {
                                    if (iQAgent_ChildNewsResultsModel.Compete_Audience.HasValue && iQAgent_ChildNewsResultsModel.Compete_Audience != -1)
                                    {
                                        NielsenAudience = string.Format("{0:n0}", iQAgent_ChildNewsResultsModel.Compete_Audience);
                                    }
                                    else
                                    {
                                        NielsenAudience = "NA";
                                    }

                                    if (iQAgent_ChildNewsResultsModel.IQAdShareValue.HasValue && Decimal.Compare(Convert.ToDecimal(iQAgent_ChildNewsResultsModel.IQAdShareValue), -1M) != 0  && (useProminenceMediaValue == false || (iQAgent_ChildNewsResultsModel.IQProminenceMultiplier != null && Decimal.Compare(Convert.ToDecimal(iQAgent_ChildNewsResultsModel.IQProminenceMultiplier), 0M) != 0)))
                                    {
                                        iqAdShareValue = string.Format("{0:n2}", useProminenceMediaValue ? (iQAgent_ChildNewsResultsModel.IQAdShareValue.Value * iQAgent_ChildNewsResultsModel.IQProminenceMultiplier) : iQAgent_ChildNewsResultsModel.IQAdShareValue.Value);
                                    }
                                    else
                                    {
                                        iqAdShareValue = "NA";
                                    }
                                        
                                    <div class="NMvideo-tags-ParentChild margintop0 float-left">
                                        <div class="view" title="Audience">
                                            @NielsenAudience
                                        </div>
                                    </div>
                                    <div class="NMvideo-tags-ParentChild margintop0  float-left">
                                        <div class="price">
                                            @iqAdShareValue @nielsen_Result
                                        </div>
                                    </div>

                                }
                                <div class="NMvideo-tags-ParentChildLast margintop0  float-left">
                                    @childItem.MediaDateTime.ToString("MM/dd/yyyy hh:mm tt") @sessioninfo.TimeZone
                                </div>
                                <div class="NMvideo-tags-ParentChildLast margintop0  float-left trimtext" id="lblCompete_@childItem.ID">
                                    @iQAgent_ChildNewsResultsModel.Publication
                                </div>
                            </div>
                        </div>
                        <div class="float-right tvsentimentmargintop">
                            <div class="float-left" align="center">
                                <div>
                                    <a target="_blank" class="cursorPointer saveMedia" onclick="ShowSaveArticle(@childItem.ID,this.id);return false;" id="aSaveNM_@childItem.ID">
                                        <img src="../images/save.png" alt="Save" title="Save Article" /></a><a style="margin-left: 19px; margin-right: 21px;" href="@(iQAgent_ChildNewsResultsModel.IQLicense > 0 ? Url.Action("Index", "Article", new { au = IQMedia.Shared.Utility.CommonFunctions.EncryptLicenseStringAES(sessioninfo.CustomerKey + "¶Feeds¶" + iQAgent_ChildNewsResultsModel.Url + "&u1=cliq40&u2=" + sessioninfo.ClientID + "¶" + iQAgent_ChildNewsResultsModel.IQLicense) }) : iQAgent_ChildNewsResultsModel.Url)" target="_blank" id="aShowNews_@childItem.ID" >
                                            <img src="../images/viewArticle.png" alt="View" title="View Article" /></a>
                                </div>
                            </div>
                            <div class="float-right margintop-3">
                                <input type="checkbox" value="@childItem.ID:@childItem.MediaType" id="chkdivChildResults_@childItem.ID" onclick="CheckUncheckMasterCheckBox(this.id,'ulMediaResults','chkInputAll');"  /></div>
                            <input type="hidden" value="@((iQAgent_ChildNewsResultsModel._ParentID == 0 || iQAgent_ChildNewsResultsModel._ParentID == null) ? "true" : "false")" id="hdnIsParent_@childItem.ID" />
                            <div class="clearfix">
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
        break;
    }
}