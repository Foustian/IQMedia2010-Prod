<?xml version="1.0"?>
<configuration>
	<configSections>
		<section name="validation" type="Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.ValidationSettings, Microsoft.Practices.EnterpriseLibrary.Validation, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
		<section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
		<sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
			<section name="IQMediaGroup.Usercontrol.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
		</sectionGroup>
	</configSections>
	<validation>
		<type defaultRuleset="LoginRuleSet" assemblyName="IQMediaGroup.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="IQMediaGroup.Core.HelperClasses.Customer">
			<ruleset name="LoginRuleSet">
				<properties>
					<property name="Email">
						<validator lowerBound="1" lowerBoundType="Inclusive" upperBound="25" upperBoundType="Inclusive" negated="false" messageTemplate="User Name can not be empty." messageTemplateResourceName="" messageTemplateResourceType="" tag="" type="Microsoft.Practices.EnterpriseLibrary.Validation.Validators.StringLengthValidator, Microsoft.Practices.EnterpriseLibrary.Validation, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="String Length Validator"/>
					</property>
					<property name="Password">
						<validator lowerBound="1" lowerBoundType="Inclusive" upperBound="25" upperBoundType="Inclusive" negated="false" messageTemplate="Password can not be empty." messageTemplateResourceName="" messageTemplateResourceType="" tag="" type="Microsoft.Practices.EnterpriseLibrary.Validation.Validators.StringLengthValidator, Microsoft.Practices.EnterpriseLibrary.Validation, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="String Length Validator"/>
					</property>
				</properties>
			</ruleset>
		</type>
	</validation>
	<connectionStrings>
		<!--<add name="IQMediaGroupConnectionString" connectionString="server=123.237.12.235;user id=root;password=baba_123456789;database=IQMediaGroup"
      providerName="MySql.Data.MySqlClient" />-->
	</connectionStrings>
	<appSettings/>
	<system.web>
		<httpRuntime executionTimeout="3600000"/>
		<!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
        -->
		<compilation debug="true" targetFramework="4.0">
			<assemblies>
				<add assembly="System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
				<add assembly="System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/>
				<add assembly="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/></assemblies>
		</compilation>
		<!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->
		<authentication mode="Windows"/>
		<!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
		<pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID">
			<controls>
				<add assembly="AjaxControlToolkit" namespace="AjaxControlToolkit" tagPrefix="AjaxToolkit"/>
			</controls>
		</pages>
	</system.web>
	<!-- 
        The system.webServer section is required for running ASP.NET AJAX under Internet
        Information Services 7.0.  It is not necessary for previous version of IIS.
    -->
	<system.serviceModel>
		<bindings>
			<basicHttpBinding>
				<binding name="WCFEndPoint" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" allowCookies="false" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard" maxBufferSize="65536" maxBufferPoolSize="524288" maxReceivedMessageSize="65536" messageEncoding="Text" textEncoding="utf-8" transferMode="Buffered" useDefaultWebProxy="true">
					<readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384"/>
					<security mode="None">
						<transport clientCredentialType="None" proxyCredentialType="None" realm=""/>
						<message clientCredentialType="UserName" algorithmSuite="Default"/>
					</security>
				</binding>
			</basicHttpBinding>
		</bindings>
		<client>
			<endpoint address="http://server.amultekrjt.com/IQMediaWCF/WCFServiceForIQMedia.svc" binding="basicHttpBinding" bindingConfiguration="WCFEndPoint" contract="IWCFServiceForIQMedia" name="WCFEndPoint"/>
		</client>
	</system.serviceModel>
	<!--<applicationSettings>
    <IQMediaGroup.Usercontrol.Properties.Settings>
      <setting name="IQMediaGroup_Usercontrol_TestWebService_TestService"
        serializeAs="String">
        <value>http://localhost:4508/IQMediaGroup.WCF.Application/TestService.svc</value>
      </setting>
    </IQMediaGroup.Usercontrol.Properties.Settings>
  </applicationSettings>-->
</configuration>
